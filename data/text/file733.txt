
	
	
		
I. IntroductionIR traffic demand is expected to increase substantially over the next 20 years, but controller workload limits airspace capacity 1 .It is expected that higher levels of automation for separation assurance (SA) will be required to accommodate future demand growth.Since trajectory prediction accuracy and robustness are central to trajectorybased operations, several studies on the performance of an automated SA system in the presence of uncertainty were conducted [2][3] .These studies relied upon a single nominal trajectory prediction for each flight for automated conflict detection.However, this approach led to an unacceptable number of late or missed conflict detections because of excessive climb trajectory prediction uncertainty.Researchers have analyzed various methods of reducing climb uncertainty including the use of flight-planning data from airlines 4 , establishing real-time air-to-ground data link of flight parameters such as aircraft weight 5 , and improving aircraft performance models 6 .However, they did not determine how improvements in climb trajectory prediction accuracy would affect automated conflict detection performance.The objective of this study is to improve conflict detection performance for climbing flights in the strategic detection time frame of 3-8 minutes without any additional data on flight-specific parameters or modifying aircraft performance models beforehand.Researchers have also investigated the conflict detection performance of an automated tactical decision support tool that employed two trajectory predictions for each flight: 1) a nominal trajectory based on flightplan, radar track, and atmospheric data, and 2) a dead-reckoning trajectory based on extrapolation of current velocity and heading 7 .Its purpose was to handle conflicts in the tactical time horizon of about 1-3 minutes.However, since no previous work analyzed the feasibility of utilizing more than one trajectory for conflict detection over a longer 3-8 minute strategic detection time frame, this study develops and evaluates a multi-trajectory strategic conflict detection algorithm that checks the volume of airspace between the fast-climb-rate and slow-climb-rate trajectories of climbing flights for conflicts.Section II gives additional detail about recent work on climb trajectory prediction uncertainty and automated SA performance under different levels of uncertainty that motivated this study.Section III describes how fast-and slowclimb-rate trajectories were modeled in the multi-trajectory conflict detection algorithm for climbing flights.Section IV focuses on the algorithm itself.Section V provides results from preliminary testing of the algorithm using a set of 11 simulation test cases from previous research.Section VI presents results from a more thorough evaluation of the algorithm using 12 hours of Fort Worth Center Host traffic and compares the performance of the proposed multitrajectory conflict detection algorithm to that of the single-trajectory algorithm for conflicts involving one or more climbing flights.Section VII discusses the results of the experiment.Section VIII summarizes the findings of the work.
II. BackgroundClimb prediction uncertainty is a significant source of error in trajectory-based automated SA.Analysis of the accuracy of a high-fidelity real-time trajectory prediction modeler for climbing departures in the Dallas/Fort Worth area for 14 days between mid-February and early March 2008 was conducted in prior work 3 .Trajectory predictions for climbing departures were generated by the Trajectory Synthesizer (TS) module of the Center-TRACON Automation System (CTAS) prototype using enroute Center Host track and flightplan data (updated every 12 seconds for each flight), hourly updates of atmospheric condition forecasts (e.g., wind, temperature, pressure) from the National Oceanic and Atmospheric Administration Rapid Update Cycle model, and a database of over 100 unique aircraft performance models.When these trajectory predictions were compared to Host radar tracks, altitude trajectory prediction errors for climbing departures had standard deviations greater than the current legal vertical separation standard of 1000 feet for all look-ahead times greater than 1.5 minutes.Simulations to evaluate automated SA performance in the strategic SA time frame of about 3-20 minutes were also conducted using the CTAS prototype under different levels of uncertainty [2][3] .In these experiments, one nominal trajectory prediction updated every 12 seconds with fresh track data for each flight was used for conflict detection and resolution.The majority of the losses of separation encountered in these simulations were conflicts that were initially detected with predicted time to first loss of separation of less than 3 minutes because of climb trajectory prediction uncertainty.These studies hypothesized that modeling and utilizing fast-and slow-climb-rate trajectories for climbing flights in automated strategic conflict detection could reduce the number of late or missed conflict detections due to climb uncertainty.The present work develops such an algorithm and evaluates it in terms of the tradeoff between improvements in initial conflict detection times and increases in false alerts.
III. Modeling Fast-and Slow-Climb-Rate Trajectory PredictionsFast-and slow-climb-rate trajectory predictions for climbing flights are modeled in CTAS by varying aircraft weight.Weight was the first parameter used because it is a factor that is typically uncertain for climbs and causes climb trajectory uncertainty 4 .The nominal trajectory predictions generated for automated conflict detection in previous work utilized a weight value that was 90% of each flight's gross maximum takeoff weight in the CTAS aircraft performance model database.In the multi-trajectory conflict detection algorithm, fast-climb-rate trajectories were modeled using a weight that was 10% lighter.Slow-climb-rate trajectories were modeled using a weight that was 10% heavier.An example of fast-and slow-climb-rate trajectories for a typical flight climbing out of Fort Worth Center is presented in Figure 1.Note that the nominal-climb-rate trajectory prediction is bounded by the fast-and slow-climb-rate trajectories at all look-ahead times by definition.It should be emphasized that modeling fast-and slow-climb-rate trajectories in CTAS is not limited to weight variations.Rather, these trajectories can also be modeled using combinations of aircraft parameters such as weight, thrust, and speed profile with reasonable deviations from the nominal 3 ; for example, a speed profile deviation of 10% of the nominal value is reasonable, whereas a deviation of 30% is not 5 .This flexibility allows for fast and easy modification of fast-and slow-climb-rate trajectory predictions.However, the effect of using parameters other than weight and/or multiple aircraft parameters on conflict detection performance is a subject for future research.
IV. Multi-Trajectory Conflict Detection AlgorithmThe multi-trajectory conflict detection algorithm checks the volume of airspace between the fast-climb-rate and slow-climb-rate trajectories of climbing flights for conflicts on a strategic detection time frame of 3-8 minutes.This was achieved by using the fast-and slow-climb-rate trajectories to define dynamic vertical and horizontal detection criteria around the nominal trajectory of the climbing flight at each trajectory time step.An 8-minute maximum first detection time is used because previous research on conflict prediction algorithms found that detections made with predicted time to first loss of separation of 8 minutes or less were accurate enough for resolutions to be issued [8][9] .Separate logic was developed to effectively handle conflicts between: 1) climbing and non-climbing (i.e., level or descending) flights, and 2) two climbing flights.It was necessary to decompose the overall multi-trajectory conflict detection algorithm into these two pieces because climb/non-climb conflicts involve one set of fast-climbrate and slow-climb-rate trajectory predictions whereas climb/climb conflicts involve two sets.
A. Dynamic Vertical Detection CriteriaThe vertical dimension of a climbing flight's protected region of airspace is defined by the fast-climb-rate and slow-climb-rate trajectory predictions of the climbing flight with 1000 feet buffers added above and below.These additional buffers are necessary because previous research observed that aircraft takeoff weight variation of more than 10% within aircraft types is common in present-day operations 4 .For instance, MD8 aircraft takeoff weights were observed to have a standard deviation equal to 7.1% of their mean.This is notable because if these takeoff weights had a Gaussian distribution, then about 16% of MD8 aircraft had takeoff weights that deviated more than 10% from the observed mean.The dynamic altitude envelope for the same flight used in the previous section is illustrated in Figure 2. In terms of conflict detection, this envelope is actually composed of dynamic "upper-vertical" and "lower-vertical" detection criteria that are functions of look-ahead time.For example, at the 3-minute time step (i.e., the start of the strategic detection horizon), the difference between the predicted altitudes of the fast-and nominal-climb-rate trajectory predictions is 719 feet and, thus, the upper-vertical detection criterion at this time step is 1719 feet.Similarly, the difference between the predicted altitudes of the nominal-and slow-climb-rate trajectory predictions is 600 feet, so the lower-vertical criterion for the same 3-minute look-ahead is 1600 feet.Note that the upper-and lower-vertical detection criteria typically increase as a function of prediction time because the fast-and slow-climb-rate trajectories diverge.In this example, the upper-and lower-vertical detection criteria of the climbing flight grow to 2450 feet and 2252 feet, respectively, by the 8-minute prediction time step (i.e., the end of the strategic detection time frame).
B. Dynamic Horizontal Detection CriteriaCorresponding dynamic horizontal detection criteria are also derived from the same fast-and slow-climb-rate trajectories.The dynamic horizontal detection criterion at each time step in these predictions is 7 nmi plus the maximum of: 1) the horizontal distance between the fast-and nominal-climb-rate trajectory predictions, and 2) the horizontal distance between the nominal-and slow-climb-rate trajectory predictions.Note that buffers of at least 2 nmi are added to the minimum horizontal separation criterion of 5 nmi to compensate for the trajectory prediction uncertainties that are inherent whenever using actual Host traffic.This is in line with previous studies of automated strategic SA performance in simulation with trajectory prediction uncertainty, which used a fixed 8 nmi strategic horizontal detection criterion [2][3] .However, these criteria were primarily selected based on engineering judgment, and there is no definitive method for selecting horizontal detection criteria.As such, an analysis of the tradeoff between different aspects of conflict detection performance such as first detection times and missed-and false-alert rates with different minimum horizontal detection criteria is needed and should be a subject of future research.The dynamic horizontal detection criteria for the same case used in Figures 12as a function of look-ahead time is graphed in Figure 3.At the start of the strategic detection time frame (3 minutes), the horizontal distance between the fast-and nominal-climb-rate trajectories is 0.24 nmi, and the horizontal distance between the nominal and slowclimb-rate trajectories is 0.20 nmi.As such, the horizontal detection criterion at this look-ahead time is 7.24 nmi.Similar to the dynamic upper-and lower-vertical detection criteria described in the previous section, the dynamic horizontal detection criteria typically grow as a function of prediction time.By the end of the strategic detection time frame (8 minutes), the horizontal detection criterion for this particular climbing flight increased to 8.26 nmi.
C. Climb/Non-Climb CasesIn the multi-trajectory conflict detection algorithm, a non-climbing flight is flagged as a conflict with a climbing flight only if it meets all of the following conditions at some look-ahead time between 3 and 8 minutes (inclusive):(1) predicted separation between their nominal trajectory predictions is less than the climbing flight's dynamic upper-or lower-vertical detection criteria and less than its dynamic horizontal detection criteria, and (2) predicted initial loss of separation or current position of either flight is in Fort Worth Center enroute airspace.By contrast, in the nominal CTAS conflict detection process, a single trajectory prediction was generated for each flight.For a climb/non-climb flight pair to be flagged as a conflict using the single-trajectory conflict detection algorithm, it needed to have predicted separation of less than 7 nmi and 1500 feet, predicted time to first loss of separation between 3 and 8 minutes (inclusive), and predicted initial loss of separation or current position in Fort Worth Center enroute airspace.
D. Climb/Climb CasesThe other conflict type that is relevant to this study is climb/climb.Conflicts involving two climbing flights (C1 and C2) require a separate algorithm that utilizes two sets of fast-and slow-climb-rate trajectories.By comparison, the algorithm for climb/non-climb conflicts described in the previous section only employs one set of fast-and slowclimb-rate trajectories.In the multi-trajectory conflict detection algorithm, a climbing flight C2 is flagged as a conflict with a different climbing flight C1 only if it meets all of the following conditions at some look-ahead time between 3 and 8 minutes (inclusive): (1) predicted separation between C2's fast-or slow-climb-rate trajectories and C1's nominal trajectory is less than C1's dynamic upper-or lower-vertical detection criteria and its dynamic horizontal detection criteria, and(2) predicted initial loss of separation or current position of either flight is in Fort Worth Center enroute airspace.However, since it is possible for the conflict to be undetected if only C1's dynamic horizontal and vertical envelopes are considered, C1's fast-and slow-climb-rate trajectories must also be checked against C2's nominal trajectory prediction and dynamic horizontal and upper-and lower-vertical detection criteria.
E. Handling Trajectory FailuresThe CTAS Trajectory Synthesizer was able to generate trajectory predictions with weight values that were -10% and +10% of the nominal value in most cases.However, when these weight variations resulted in trajectory failures, logic in the multi-trajectory conflict detection algorithm reduced each weight variation by 5 percentage points at most twice until the weight perturbations reached 0% or both the fast-and slow-climb-rate trajectory predictions were successfully generated (whichever occurred first).However, since trajectory failures after weight perturbations converge to zero do occur about 1% of the time, it may be necessary to also utilize dead-reckoning trajectories on a limited strategic detection time horizon (e.g., 5 minutes) in such cases.
V. Preliminary Testing in SimulationPreliminary evaluation of the strategic multi-trajectory conflict detection algorithm for climbing flights utilized losses of separation encountered in simulations with different levels of uncertainty when the single-trajectory conflict detection algorithm and automated conflict resolution were used 3 .No losses of separation occurred over 10 simulation hours when there was no trajectory uncertainty, or when weight uncertainty was uniformly distributed between -10% and +10%.However, there were 19 losses of separation when the weight range increased to ± 20%.Analysis of these 19 losses found that 11 of them involved either late (i.e., conflict initially detected with predicted time to first loss of separation of less than 3 minutes) or missed detection due to climb prediction uncertainty.As a preliminary test, the multi-trajectory conflict detection algorithm was applied to these 11 simulation cases.
A. Simulation Test CasesThe characteristics of the 11 simulation test cases are summarized in Table 1.It contains data on the aircraft type of both flights, their respective phases of flight at predicted first loss of separation (climb or level), the lateral and vertical distances between them at minimum separation, and several conflict detection parameters (time to first loss of separation, minimum predicted horizontal separation, and minimum predicted vertical separation).
Case
B. Single-Trajectory Conflict Detection ExampleThe single-trajectory algorithm's conflict detection process for the climbing (AC1) and cruising flight (AC2) in case 4 of Table 1 is illustrated in Figures 45.The nominal trajectory predictions made when the cruising flight first enters Fort Worth Center airspace and the simulated tracks of the climbing flight are graphed in Figure 4.Note that the climbing flight's nominal trajectory prediction at this point in time at 6.4 minutes prior to first loss of separation has a vertical rate that is noticeably larger than what the simulated flight would actually turn out to climb at.This climb trajectory prediction uncertainty persisted even though trajectory predictions for both flights were constantly being updated every 12 seconds with fresh track data.As such, the conflict was not detected until 2.8 minutes prior to loss of separation (see Figure 5), which falls outside of the strategic detection time horizon of 3-8 minutes.
C. Multi-Trajectory Conflict Detection ExampleFigure 6 below is an illustration of the first detection of the same conflict presented in Figures 45by the multitrajectory conflict detection algorithm at 6.4 minutes to go.As before, this plot graphs altitude (feet) versus time from loss of separation (minutes) for both the climbing and cruising flights.The black dots represent the simulated tracks of the climbing flight.The fast-and slow-climb-rate trajectories of the climbing flight and the nominal trajectory of the cruising flight are graphed with solid brown, green, and blue lines, respectively.In this particular case, the altitude envelope defined by the fast-and slow-climb-rate trajectories accounted for the climbing flight's trajectory uncertainty seen in Figure 4.As a result, the multi-trajectory algorithm initially detected this conflict 6.4 minutes prior to loss of separation in simulation.In cases like this, checking the volume of airspace between the fastand slow-climb-rate trajectories of climbing flights for conflicts is valuable because it significantly increases the time to loss at first detection and thereby gives a controller or an automated conflict resolution system more time to develop a suitable conflict-free resolution trajectory.
D. Conflict Detection Performance in SimulationThe same analysis presented in previous sections for case 4 in Table 1 was also applied to the other 9 climb/nonclimb and 1 climb/climb conflicts in prior simulations of automated SA performance that had late or missed conflict detection due to climb uncertainty 3 .Note that the multi-trajectory algorithm detected 10 out of the 11 conflicts in the strategic detection time frame of 3-8 minutes.The average improvement in first conflict detection times was about 3.7 minutes.In case 10, however, the multi-trajectory algorithm was only able to detect the conflict with 2.0 minutes to go (although this is an improvement over the single-trajectory algorithm's missed detection).This can be attributed to the climbing flight's simulated weight uncertainty of +16%, which exceeds the -10% and +10% weight uncertainties used by the multi-trajectory algorithm to generate fast-climb-rate and slow-climb-rate trajectories, respectively.This is important because aircraft takeoff weight variation of more than 10% within aircraft types is common in current operations 9 .Two possible non-mutually-exclusive ways of handling this climb uncertainty include: 1) incorporating variations in climb speed profile into the fast-and slow-climb-rate trajectory predictions, and/or 2) generating and utilizing a dead-reckoning trajectory based on an extrapolation of current velocity and heading for climbing flights in addition to the fast-and slow-climb-rate trajectory predictions.Although this is outside the scope of this study, it should be a subject of future research.
AC1
VI. Evaluation using Center Host Radar Track Data
A. MethodologyThe multi-trajectory conflict detection algorithm described in previous sections was implemented in CTAS, and experiments were conducted to evaluate the effect of using fast-and slow-climb-rate trajectories to detect conflicts involving one or more climbing flights in the strategic detection time frame of 3-8 minutes.The nominal CTAS conflict detection algorithm, which predicts conflicts by generating a single nominal trajectory prediction for each flight and comparing them pairwise, served as the baseline.A recording of Fort Worth Center Host radar track data on Thursday, May 21, 2009 from 9:45 AM-10:00 PM local time was played back once for each algorithm to record conflict detection data such as aircraft IDs, times at which conflict detections were made, predicted initial loss of separation times and positions, etc.This day had no major weather activity and appeared to have traffic typical of a weekday in Fort Worth Center.Performance metrics were selected to provide insight into the performance and efficiency tradeoff involved with using the multi-trajectory algorithm instead of the single-trajectory algorithm.Only conflict detection data involving at least one climbing flight were relevant to this study; data for all other conflict types were ignored.The relevant conflict data were categorized as: 1) climb/non-climb, or 2) climb/climb.Three performance metrics were computed for both conflict types: 1) number of unique conflict detections using the single-and multi-trajectory approaches, 2) percentage of conflict detections made by the multi-trajectory algorithm but not by the single-trajectory algorithm that were false alerts, and 3) difference between the first detection times of detections made by both algorithms.
B. Number of Conflict Detections (8-Minute Maximum First Detection Time)The first performance metric is a count of the number of unique conflict detections by each algorithm.Since both the vertical and horizontal protection envelopes defined by the fast-and slow-climb-rate trajectory predictions were typically greater than the detection criteria in effect when only nominal-climb-rate trajectory predictions were used, the number of unique conflict detections by the multi-trajectory algorithm is expected to be greater than the number of detections with the single-trajectory approach.The conflict detections made by the single-and the multi-trajectory algorithms were categorized according to their conflict type (climb/non-climb or climb/climb) and summarized in Table 3 below.The number of conflict detections by the multi-trajectory algorithm was about 50% and 75% greater than the single-trajectory algorithm for climb/non-climb and climb/climb cases, respectively.As such, it was also important to analyze each of the conflicts detections made by the multi-trajectory algorithm but not by the single-trajectory algorithm to estimate how many of them were false alerts.
Conflict Detection
C. False Alert Analysis (8-Minute Maximum First Detection Time)The second performance metric is the percentage of conflict detections made by the multi-trajectory conflict detection algorithm but not by the single-trajectory algorithm that were false alerts.This was determined for each individual case by applying engineering judgment to plots of radar tracks and trajectory predictions at first detection.This qualitative analysis method is based on earlier research that analyzed false-alert rates for a tactical conflict detection algorithm 10 .Two examples are provided in this section for: 1) a false alert, and 2) a valid alert.An example of a false alert by the multi-trajectory algorithm involved the climbing flight (AC1) and cruising flight (AC2) is illustrated in Figure 7 below.The plot graphs altitude (feet) versus time (minutes) for both flights.The cruising flight was flying westbound at 30,000 feet across Fort Worth Center while the climbing flight was on its way up to its top-of-climb at 31,000 feet.In this case, the multi-trajectory algorithm predicted that a conflict would occur near the slow-climb-rate trajectory prediction about 8 minutes downstream.However, no controller action is evident in the radar tracks or the corresponding x-y plots (not shown).As such, this case was inferred to be a false alert by the multi-trajectory conflict detection algorithm.On the other hand, the nominal trajectory predictions of the climbing flight closely matched the actual flight path and, thus, the single-trajectory algorithm correctly predicted that there would no loss of separation between the two flights.An example of a valid alert by the multi-trajectory algorithm involved the climbing flight (AC1) and cruising flight (AC2) illustrated in Figure 8 below.As in Figure 7, the plot graphs altitude (feet) versus time (minutes) for both flights.The cruising flight was flying westbound at 34,000 feet across Fort Worth Center while the climbing flight was heading up to its top-of-climb at 37,000 feet.In this case, the multi-trajectory algorithm initially detected the conflict about 8 minutes prior to when loss of separation was predicted to occur, and the controller intervened 1.5 minutes after that with a temporary altitude of 33,000 feet to the climbing flight to resolve the conflict.Cases such as this one that exhibited controller intervention were inferred to be valid alerts by the multi-trajectory conflict detection algorithm.By contrast, the single-trajectory algorithm never detected a conflict between these two flights.Each of the 86 climb/non-climb and 49 climb/climb conflict detections made by the multi-trajectory algorithm but not by the single-trajectory algorithm were plotted and analyzed as done in Figures 7 and8 to determine if they were false alerts.The analysis determined that only about 15% of the 135 additional conflict detections by the multitrajectory algorithm were false alerts.Although this provides some insight into the efficiency of the multi-trajectory algorithm, a more rigorous and thorough missed-and false-alert analysis is needed and will be the subject of future research.This type of analysis must be conducted in simulation because losses of separation rarely occur in actual operations.Figure 1 .1Figure 1.Example fast-and slow-climb-rate trajectory predictions.
Figure 2 .2Figure 2. Example dynamic vertical detection criteria.
Figure 3 .3Figure 3. Example dynamic horizontal detection criteria.
Figure 4 .4Figure 4. Missed conflict detection by single-trajectory algorithm at 6.4 minutes to go.
Figure 5 .5Figure 5. First conflict detection by single-trajectory algorithm at 2.8 minutes to go.
Figure 6 .6Figure 6.First conflict detection by multi-trajectory algorithm at 6.4 minutes to go.
Figure 7 .7Figure 7. Example multi-trajectory conflict detection algorithm false alert.
Figure 8 .8Figure 8. Example multi-trajectory conflict detection algorithm valid alert.
Table 1 . Late or missed detection cases due to climb uncertainty (± 20% simulations).1AC1AC2Phase ofMiss DistanceConflict Detection(type)(type)Flight(nmi, feet)(minutes, nmi, feet)1MD88 MD10C/L3.46, 2432.2, 4.0, 9712MD82 MD82C/L4.60, 1192.0, 2.4, 8273MD82 MD83C/L3.37, 2752.4, 1.7, 8274FA20 A319C/L3.70, 82.8, 6.4, 9465 WW24 DC87C/L2.66, 3202.8, 6.5, 14026B733 DC10C/L3.66, 6682.8, 6.4, 9027E135 B733C/L4.72, 646missed detection8MD82 A306C/L4.98, 3281.8, 6.4, 9329MD83 DC10C/L3.77, 5301.8, 2.3, 74410B733 DC10C/L4.37, 666missed detection11 C56X E145C/C3.31, 6241.6, 2.2 1383
(type) AC2 (type) Phase of Flight First Detection Time for Single-Trajectory Algorithm (minutes) First Detection Time for Multi-Trajectory Algorithm (minutes) Improvement in First Detection Time (minutes)1MD88 MD10C/L2.25.83.62MD82 MD82C/L2.04.02.03MD82 MD83C/L2.43.41.04FA20A319C/L2.86.43.65 WW24 DC87C/L2.87.24.46B733DC10C/L2.87.85.07E135B733C/Lmissed detection6.06.08MD82 A306C/L1.88.06.29MD83 DC10C/L1.83.61.810 B733DC10C/Lmissed detection2.02.011 C56XE145C/C1.67.05.4Average (minutes)1.85.63.7
Table 2 . Conflict detection performance by single-and multi-trajectory algorithms in simulation.2
Type Number of Detections (Single-Trajectory) Number of Detections (Multi-Trajectory) Increase in Number of Conflict Detections (%)Climb/Non-Climb17626148.3%Climb/Climb5910374.6%Overall (Climb Conflict23536454.9%Detections)
Table 3 . Number of conflict detections (8-minute maximum first detection time).3
		
		

			
AcknowledgmentsThe author would like to thank Joe Walton for his exceptional work implementing the multi-trajectory conflict detection algorithm for climbing flights in CTAS, without which this study would not have been possible.In addition, the author would also like to acknowledge Dave McNally, Russ Paielli, and Chester Gong for their insightful comments and suggestions, and Jinn-Hwei Cheng, Dave Darling, and Thien Vu for their support of CTAS software.
			

			
Note that the difference in the number of unique conflict detections between the two algorithms was 85 for climb/climb cases and 44 for climb/non-climb cases (see Table 3).Discrepancies with the number of detections that were analyzed for this section are due to cases where the multi-trajectory algorithm had a detection at the same time as the single-trajectory algorithm, but it predicted that the conflict would occur less than 3 minutes in the future while the single-trajectory algorithm predicted that the conflict would occur more than 3 minutes in the future.
D. Initial Conflict Detection Times (8-Minute Maximum First Detection Time)The third performance metric compares the first detection times of conflict detections made by both the singleand multi-trajectory algorithms to determine the performance gains that could be achieved.As a convention, if the first conflict detection time using the multi-trajectory approach was earlier than using the single-trajectory approach, then the difference was given a positive sign; otherwise, it was given a negative sign.The multi-trajectory approach is expected to have earlier first detection times than the single-trajectory approach because it utilizes larger vertical and horizontal detection criteria by definition.Analysis of conflict detections made by both the single-and multi-trajectory algorithms found that most were detected by both algorithms within 24 seconds of each other; small differences in conflict detection times were the result of artifacts in collecting data with the single-and multi-trajectory algorithms and heuristics employed during post-experiment analysis.Many of these conflict detections were made at around the same time by both algorithms because they involved flights that (among other reasons): 1) had just entered Fort Worth Center airspace, 2) had just been identified by radar, or 3) had just received a flightplan amendment.Among the 34 common climb/non-climb conflict detections with differences in first conflict detection times of greater than 24 seconds, there was a notable improvement of 1.9 minutes on average with a standard deviation of 2.8 minutes (see Table 5 below).Likewise, in 19 of the common climb/climb conflict pairs, the conflict detection times 2.3 minutes earlier on average with a standard deviation of 2.3 minutes.Although there were two cases where the single-trajectory algorithm detected conflicts earlier than the multi-trajectory algorithm because of the time it took for the latter to apply its trajectory failure handling logic (see Section IV.E), the multi-trajectory algorithm almost always had earlier detections as expected.
Conflict Detection
VII. Discussion
A. Flight Intent Accuracy and Pilot ConformanceIntent accuracy and pilot conformance to flightplans are crucial to trajectory prediction accuracy and automated conflict detection performance.However, flightplan amendments often are not entered into the Host by controllers due to workload limits.A comparison of controller clearances by voice to flightplan amendments entered found that while 95% of altitude clearances were entered, less than one-third of route clearances were entered 11 .Although less than 15% of the 135 conflict detections that were made by the multi-trajectory algorithm but not by the single-trajectory algorithm were false alerts, 16.3% of these 135 additional detections were the result of outdated flight intent data or pilot non-conformance to flightplans (see Table 6).As such, these superfluous alerts were not charged against the multi-trajectory algorithm in the false-alert analysis in Section VI.This analysis highlights the importance of pilot conformance to flightplans and accurate flight intent information in any trajectory-based automated conflict detection system.The tradeoff between higher controller workload from entering a greater percentage of clearances into the Host and lower workload due to fewer superfluous alerts by the conflict detection automation as well as the potential effect of datalink on this tradeoff should be researched further.
Conflict Detection Type
B. Tradeoff Between Improvements in First Detection Times and Increased False AlertsThe conflict detection performance results in Section VI exhibit a clear tradeoff between improvements in first detection times and increases in false alerts by the multi-trajectory conflict detection algorithm.It improved first conflict detection times by an average of 2 minutes over the single-trajectory algorithm.However, it also had 55% more unique conflict detections, though only about 15% of these additional detections turned out to be false alerts.Although this tradeoff between improvements in first detection times and increased false alerts appears reasonable based on engineering judgment, a formal human factors study that involves controllers and/or pilots using the multitrajectory conflict detection algorithm for climbing flights is necessary before any such conclusion can be made.
VIII. ConclusionsClimb prediction uncertainty is a significant source of error in the conflict detection function of trajectory-based automated separation assurance systems.A multi-trajectory algorithm was developed and evaluated to improve the performance of the conflict detection function for climbing flights in the strategic detection time frame of 3-8 minutes by protecting the airspace volume defined by fast-and slow-climb-rate trajectory predictions.Preliminary testing of the algorithm was conducted using a set of 11 late or missed conflict detection cases encountered in prior simulations of automated separation assurance performance in the presence of trajectory uncertainty.The average improvement in first conflict detection times was about 3.7 minutes.Next, this multi-trajectory conflict detection algorithm was applied to 12 hours of Fort Worth Center traffic data.Results showed that conflict detections occurred about 2 minutes earlier using the multi-trajectory conflict detection algorithm than using a single-trajectory algorithm.Furthermore, although the number of unique conflict detections involving at least one climbing flight was 55% greater in the multi-trajectory case than in the single-trajectory case, only 15% of these conflicts were false alerts.This finding indicates that checking the volume of airspace between fast-climb-rate and slow-climb-rate trajectories can improve first detection times with a reasonable tradeoff in false alerts.
AppendixThe experiments and analysis conducted for Section VI were repeated for this Appendix using a longer conflict detection horizon of 12 minutes instead of 8 minutes.This was done because previous research on automated SA performance in the presence of different levels of uncertainty used a 3-12 minute strategic conflict detection time frame as opposed to the shorter 3-8 minute time frame utilized in this study.
A. Number of Conflict Detections (12-Minute Maximum First Detection Time)The first performance metric is a count of the number of unique conflict detections that were made by the singleand multi-trajectory algorithms.Comparing the results in Tables 3 andA1, the percentage increase in the number of detections between the multi-trajectory and single-trajectory algorithms using a 12-minute maximum first conflict detection time is smaller than using an 3-8 minute detection time horizon.However, the overall number of additional climb/non-climb and climb/climb detections is larger when probing for conflicts 12 minutes ahead.This suggests that a maximum first detection time of 12 minutes may be too far ahead when utilizing multiple climb trajectories to detect conflicts involving one or more climbing flights.The second performance metric is the percentage of conflict detections made by the multi-trajectory conflict detection algorithm but not by the single-trajectory algorithm that were false alerts.As in Section VI, false alerts were determined for each individual case by applying engineering judgment to plots of radar tracks and trajectory predictions at first detection.The analysis found that 20.3% and 11.5% of the additional 133 climb/non-climb and 78 and climb/climb detections, respectively, were false alerts (see Table A2).The overall false alert rate of 17.1% using a maximum first detection time of 12 minutes is higher than the overall false alert rate of 14.8% when conflict detections were constrained to a shorter 3-8 minute time frame, which suggests that a maximum first detection time of 12 minutes may be too large when utilizing fast-and slow-climb-rate trajectories for strategic conflict detection.
Conflict Detection Type
Conflict Detection Type
C. Initial Conflict Detection Times (12-Minute Maximum First Detection Time)The third performance metric compares the first detection times of conflict detections made by both the singleand multi-trajectory algorithms to determine the performance gains that could be achieved.In 54 of the common climb/non-climb cases, there were notable improvements in initial detection times of 1.6 minutes on average with a standard deviation of 2.2 minutes for a 12-minute maximum first detection time (see Table A3).Likewise, in 26 of the common climb/climb cases, first conflict detection times were greater by 2.1 minutes on average with a standard deviation of 2.3 minutes.The corresponding results for an 8-minute maximum first detection time was about 0.2 minutes greater on average with similar standard deviations even though the 3-8 minute detection time frame used was only about half as long.Again, this suggests that a maximum first detection time of 8 minutes is preferred for the multi-trajectory conflict detection algorithm for climbing flights developed in this paper.
Conflict Detection			
			

				


	
		Next Generation Air Transportation System Integrated Plan
		
			Dec. 12, 2004
		
	
	Joint Planning and Development Office
	Joint Planning and Development Office, "Next Generation Air Transportation System Integrated Plan," Dec. 12, 2004.



	
		Automated Separation Assurance in the Presence of Uncertainty
		
			DMcnally
		
		
			DThipphavong
		
	
	
		26 th International Congress of the Aeronautical Sciences
		
			Sep. 14-19, 2008
		
	
	McNally, D. and Thipphavong, D., "Automated Separation Assurance in the Presence of Uncertainty," 26 th International Congress of the Aeronautical Sciences, Sep. 14-19, 2008.



	
		Analysis of Climb Trajectory Modeling for Separation Assurance Automation
		
			DThipphavong
		
	
	
		AIAA Guidance, Navigation, and Control Conference and Exhibit
		
			Aug. 18-21, 2008
		
	
	Thipphavong, D., "Analysis of Climb Trajectory Modeling for Separation Assurance Automation," AIAA Guidance, Navigation, and Control Conference and Exhibit, Aug. 18-21, 2008.



	
		Climb Trajectory Prediction Enhancement Using Airline Flight-Planning Information
		
			RACoppenbarger
		
	
	
		AIAA Guidance, Navigation, and Control Conference
		
			Aug. 1999
		
	
	Coppenbarger, R.A., "Climb Trajectory Prediction Enhancement Using Airline Flight-Planning Information," AIAA Guidance, Navigation, and Control Conference, Aug. 1999.



	
		Real-Time Data Link of Aircraft Parameters to the Center-TRACON Automation System (CTAS)
		
			RACoppenbarger
		
	
	
		4 th USA/Europe ATM R&D Seminar
		
			Dec. 3-7, 2001
		
	
	Coppenbarger, R.A., "Real-Time Data Link of Aircraft Parameters to the Center-TRACON Automation System (CTAS)," 4 th USA/Europe ATM R&D Seminar, Dec. 3-7, 2001.



	
		Improving and Validating CTAS Performance Models
		
			WChan
		
		
			RBach
		
		
			JWalton
		
	
	
		AIAA Guidance, Navigation, and Control Conference and Exhibit
		
			Aug. 14-17, 2000
		
	
	Chan, W., Bach, R., and Walton, J., "Improving and Validating CTAS Performance Models," AIAA Guidance, Navigation, and Control Conference and Exhibit, Aug. 14-17, 2000.



	
		Tactical Conflict Detection Methods for Reducing Operational Errors
		
			RAPaielli
		
		
			HErzberger
		
	
	
		Air Traffic Control Quarterly
		
			13
			1
			2005
		
	
	Paielli, R.A. and Erzberger, H., "Tactical Conflict Detection Methods for Reducing Operational Errors," Air Traffic Control Quarterly, Vol. 13, No. 1, 2005.



	
		Automated Conflict Resolution for Air Traffic Control
		
			HErzberger
		
	
	
		25 th International Congress of the Aeronautical Sciences
		
			Sep. 3-8, 2006
		
	
	Erzberger, H., "Automated Conflict Resolution for Air Traffic Control," 25 th International Congress of the Aeronautical Sciences, Sep. 3-8, 2006.



	
		Conflict Detection and Resolution In the Presence of Prediction Error
		
			HErzberger
		
		
			RAPaielli
		
		
			DRIsaacson
		
		
			MMEshow
		
	
	
		Europe Air Traffic Management R&D Seminar
		
			Jun. 17-20, 1997
		
	
	1 st USA/
	9 Erzberger, H., Paielli, R.A., Isaacson, D.R., and Eshow, M.M., "Conflict Detection and Resolution In the Presence of Prediction Error," 1 st USA/Europe Air Traffic Management R&D Seminar, Jun. 17-20, 1997.



	
		Analysis of False-Alert Rates for a Tactical Conflict Detection System
		
			RAPaielli
		
	
	
		AIAA 5 th Aviation, Technology, Integration, and Operations Conference
		
			Sep. 26-28, 2005
		
	
	Paielli, R.A., "Analysis of False-Alert Rates for a Tactical Conflict Detection System," AIAA 5 th Aviation, Technology, Integration, and Operations Conference, Sep. 26-28, 2005.



	
		Currency of Flight Intent Information and Impact on Trajectory Accuracy
		
			KSLindsay
		
	
	
		FAA/Eurocontrol Technical Interchange Meeting on Shared Flight Intent Information and Aircraft Intent Data
		
			Oct. 24-26, 2000
		
	
	Lindsay, K.S., "Currency of Flight Intent Information and Impact on Trajectory Accuracy," presented at FAA/Eurocontrol Technical Interchange Meeting on Shared Flight Intent Information and Aircraft Intent Data, Oct. 24-26, 2000.


				
			
		
	
