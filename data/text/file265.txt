
	
	
		
Introductionhe overarching viewpoint that is influencing how future air traffic services are provided under the Joint Planning and Development Organization's (JPDO's) Next Generation Air Transportation System (NGATS) is to "accommodate user preferences to the maximum extent possible." 1 Work contributing to this vision in the oceanic domain is underway at several research organizations. 2,3,4For example, recent efforts have focused on providing enhanced situational awareness to pilots to enable more frequent step-climbs and to increase awareness of surrounding traffic. 3Additionally, in Ref. 4 a backward recursion dynamic programming algorithm was utilized to calculate minimum-time wind-optimal routes, which served as surrogates for the actual user-preferred routes, in the Central East Pacific (CEP).This study showed that significant benefits could be achieved by transiting flights off the fixed CEP-based route structure onto wind optimal routes particularly during the winter months when the polar jet stream commonly intersects the CEP routes.The one major concern raised in this study related to the significant number of new simulated, four-dimensional (4-D) trajectory crossing points that were generated as a result of allowing user-preferred routing in this region of the ocean.In this study, a 4-D trajectory crossing point is defined as a point in which two or more flights are predicted to co-exist at the same location in space (latitude, longitude, and altitude) and time.An example of several potential 4-D trajectory crossing points is highlighted by the squares in Fig. 1b.These additional crossing points may significantly increase the workload of the air traffic controllers that would be managing these new traffic streams, since these crossing points would require close monitoring to avoid the potential for loss-of-separation.For reference, the simulated flight histories for all eastbound flights that utilized one of the seven CEP routes on Dec. 14, 2005 are shown in Fig. 1a.By contrast, the same set of flights on simulated wind optimal routes are shown in Fig. 1b.The wind-optimal routes depicted in this figure were generated using the technique described in Ref. 4 in which flights traveled along their nominal routes in domestic airspace, and wind optimal routes only within oceanic airspace.Had the complete wind optimal routes between the origin and destination been depicted, considerably more 4-D trajectory crossing points would occur.The most noticeable difference between the flight histories depicted in these two images results from the fact that the highly structured CEP routes ensures that flights on parallel tracks remain laterally separated, which is not the case when flights are allowed to fly along wind-optimal routes.The purpose of this paper is to describe a general approach for scheduling flights in the aforementioned 4-D trajectory crossing point problem.This study is believed to be the first to examine the potential benefits of allowing flights to travel on user-preferred-routes in the CEP, while strategically scheduling these flights to ensure that the number of trajectory crossing points is manageable.The issue of whether user-preferred trajectories are beneficial in the CEP is an open research area that is outside the scope of the current study.At the core of this new technique, is a novel approach for transforming the flight scheduling problem into a job shop scheduling problem. 5Literature on the job shop dates back to the fifties and sixties 7 and has received widespread use in the manufacturing and service industries, 8 and more recently in the semiconductor industry 9 for scheduling and planning operations.The basic premise behind the job shop scheduling approach is the need to schedule a set of jobs, which could be flights or patients in a hospital, to a set of machines, which could be regions of airspace or hospital beds.A more detailed discussion of the job shop scheduling formulation used in this study is reserved for Section II.A.The resulting job shop scheduling problem is subsequently solved using a 0-1 integer programming model that was originally developed to solve a deterministic traffic flow management problem. 6By varying the attributes of the machines in the job shop scheduling problem, two distinct types of feasible schedules are generated.The first type of schedules are highly restrictive but ensure that all 4-D trajectory crossing points are eliminated, while the second type are less restrictive yet may require a limited amount of tactical flight separation to eliminate all crossing points.The issue of how the tactical flight separation would be accomplished in a futuristic air traffic control (ATC) system is an open research area that would likely require changes in ATC procedures and the development of new advanced ground-based and flight-deck based technologies, such as those described in the Distributed Air/Ground (DAG) Traffic Management (TM) operational concept. 10o test this new scheduling approach, the flights that were nominally scheduled to fly along one of the seven structured CEP based routes on Dec. 14-16 and 19-20 of 2005 (see Fig. 1a) were first rerouted using the minimum travel time, wind-optimal routing algorithm described in Ref. 4, and then scheduled using the approach described in this study.The resulting flight schedules are examined in terms of the scheduling delays, the number of residual trajectory crossing points, and the adjusted time savings.Section II provides a high level overview of the job shop scheduling problem within the context of flight scheduling.The 0-1 integer programming model that was adopted for this study, as well as a heuristic for decomposing this model into a number of computationally tractable sub-problems is also discussed in this section.Statistics related to the job shop formulation of the flight scheduling problem as well as the flight scheduling results are presented in Section III.Section IV contains concluding remarks and recommendations for future research.
II. Modeling MethodTo strategically resolve the temporal trajectory crossing points, this study begins by recasting the CEP routing problem, which consists of flights, sectors, and schedule travel times, in terms of the job shop scheduling problem that consists of jobs, operations, schedules, and machines.This mapping enables the utilization of integer programming and graph-based solution methodologies for calculating airborne and departure delays that resolve the 4-D trajectory crossing points.The remainder of this section is formatted as follows.In Section II.A, the job shop scheduling formulation of the CEP routing problem is presented; the 0-1 integer programming model adopted is presented in Section II.B; and finally a heuristic for decomposing this model into computationally tractable subproblems is presented in Section II.C.
A. Job-Shop FormulationThe job shop problem consists of a set of N jobs! J i i = 1,...,N { } and a set of m machines ! M k k = 1,...,m { } .Each job can only be processed on one machine at any given instance of time, and each machine can only process one job at a given instance of time.Jobs are further subdivided into a sequence of !P i operations that are subsequently processed at one of the available machines. 5As an example, the set of operations associated with the i th job can be denoted as !O ij i = 1,...,N and j = 1,...,P i
{} .Here the first subscript denotes the job number and the second subscript denotes the operation index.This set of operations also contains precedence constraints, which require that operation !O ij be completed prior starting work on operation !O ij+1 for all !j = 1,..., N i .Furthermore, each operation requires processing time! l ij on a particular machine ! M ij " M 1 ,...,M m { } .The objective of the job shop problem is therefore to find a feasible solution (i.e., one for which each operation !O ij is scheduled to a machine !M ij subject to the aforementioned constraints) that minimizes a particular cost function.In terms of the oceanic flight scheduling problem, each flight can be thought of as a job, and each machine represents a region of oceanic airspace.To facilitate this study, a uniform three-dimensional grid was overlaid on Oakland Oceanic Sectors 3 (OC3) and 4 (OC4), which are the primary oceanic sectors through which flights on the CEP routes travel (see Fig. 2).For this initial study, no attempt was made to define an "optimal" grid that accounted for the prevailing easterly and westerly traffic flows in this region.Follow-on studies that examine the benefits of creating sparse grids that are aligned with the traffic flows would be beneficial.It is worth noting that this process of overlaying a grid on a region of airspace has been used in the past, 11,12 but the current application to oceanic flight scheduling is believed to be unique.A graphical representation of the resulting airspace is shown in Fig. 2. Depicted in this figure are the Hawaiian Islands in the lower left corner, the west coast of the United States on the right side, the OC3 and OC4 boundaries, a representative grid with corresponding cell (i.e., machine) labels, and two wind optimal routes.In this study, two different horizontal grid cell sizes were used to explore the scalability and dimensionality of the flight scheduling approach.The first grid cell size was 30 nautical miles (nmi) by 30 nmi, which corresponds to the soon to be operationally implemented lateral and longitudinal separation standard for flights on the CEP routes.The number of operations that were allowed to be scheduled to each of the machines corresponding to one of these cells was assumed to be one, which ensured that no two flights occupied the same machine, or 30 nmi x 30 nmi region of airspace at any time.The second grid cell size was 100 nmi by 100 nmi, which has two primary benefits.Firstly, the larger grid cell size reduces the effective number of machines that each flight must utilize, which significantly reduces the computational complexity of the scheduling problem as will be shown in Section 3. Secondly, the capacity of each of these larger machines (i.e., regions of airspace) was also assumed to be greater than 1, which allowed more than one flight to occupy the machine at any instant.The main reason for allowing this is because these schedules will be less restrictive than the schedules generated with the smaller grid cells that only accommodate a single flight at any instance of time.The vertical dimension of each cell was set to 1,000 ft, which corresponds to the vertical separation of flights along the CEP routes.Continuing with the job shop analogy, each grid cell depicted in Fig. 2 will become a machine in the problem formulation, and each flight path will be decomposed into a series of operations by transforming the continuous flight plan into a set of discreet events.As an example, job 1, J 1 , which is composed of operations  After casting the flight scheduling problem in terms of the job shop problem, the objective is to find a feasible solution that temporally spaces flights to eliminate 4-D trajectory crossing points subject to a specified cost function.The light, bluish-grey cells in Fig. 2 illustrate three potential trajectory crossing points.Assuming that both jobs J 1 and J 2 require access to machine M 19 at time !" t , a Gantt chart can be used to depict a subset of both a nominal schedule (see Fig. 3a) and a potentially feasible schedule (see Fig. 3b).If the processing time of the eight operations associated with J 1 (i.e., O 18 ) is l 18 and the processing time of the fifth operation associated with J 2 (i.e., O 25 ) is l 25 , then a potentially feasible schedule can be obtained by increasing the processing time of O 25 to ! " l 25 = l 25 + l 18 .From a flight scheduling perspective, this would require the flight corresponding to !J 2 to absorb !"t = l 18 units of time prior to reaching machine !M 19 .This could be done through a combination of pre-departure delays, speed controls, or path stretching.Sections II.B describe the algorithmic approaches that were adopted in this study for calculating feasible flight schedules.! O 1q 1 " q " 10
B. 0-1 Integer Programming ModelTo schedule the CEP flights, the 0-1 integer programming model that was originally described in Ref. 6 was adopted, and is summarized here for completeness.It is worth noting that this is a general model that has been developed for assigning optimal delays to flights in order to satisfy airspace capacity constraints, such as airport arrival rate or sector capacity constraints.This model relies upon a binary decision variable !w ft j " {0,1} that is defined as follows:! w ft j = 1, if flight f arrives at sector j by time t 0, otherwise" # $With this definition of !w ft j , the objective of this model is to minimize the total delay cost with respect to the unconstrained schedule that is expressed as follows:! min (c f g [ f "F # $ c f a ) t(w ft k $ w f,t$1 k ) {t "T f k |k= P(f,1) # + c f a t(w ft k $ w f,t$1 k ) ] {t "T f k |k= P(f,N f )} #(1)The first summation in this expression is over all flights (i.e., jobs in the job shop scheduling parlance), the second summation is over all times that a given flight could occupy the departure airport, while the third summation is over all times that a flight can land at the destination airport.The expression! (w ft j " w f,t"1 j) is defined to be one if flight f arrives at sector j at time t, and is zero otherwise.As is commonly done, airborne delay costs, Sector Capacity: Ensures that demand in sector j at time t does not exceed the sector's time-varying capacity,! (w ft j " w ft # j ) $ S j (t), %j & J, t & T {(f, # j )|P(f,i)= j,P(f,i+1)= # j ,i< N f } '(2)Within the job shop scheduling context, each machine corresponds to a sector within this model; J corresponds to the set of all machines; and T is the set of all time periods considered in the scheduling problem.For our study, machine capacities, !S j (t) , were varied between one and three.A machine capacity of one ensured that only one operation (i.e., flight) could occupy any given machine at a instance of time, which prevented 4-D trajectory crossing points from occurring.Machine capacities of two and three were also permitted in this study for the machines represented by the 100 nmi x 100 nmi region of airspace.These increased machine capacities result in fewer binding constraints in the optimization problem, but can also lead to situations in which multiple flights utilize a common machine at the same time, which can lead to a limited number of unresolved 4-D trajectory crossing points.Sector Connectivity: Ensures that flight f must spend at least !l fj units of time in sector j before proceeding to sector !" j if j and !" j are consecutive sectors along the path of flight f,! w f,t +l fj " j # w ft j $ 0,%f & F, t & T f j , j = P(f, i), such that i < N f , and " j = P(f,i + 1)(3)Time Connectivity: Requires that if a flight has arrived at sector j by time t, then !w ft j has a value of 1 for all later time periods,! w ft j " w f,t"1 j # 0, $f % F, j % P f , t % T f j(4)It is worth noting that the original model presented in Ref. 6 also includes a set of arrival capacity, departure capacity, and flight connectivity constraints that are used to handle flight connectivity.Since these constraints were not relevant to the current en route flight scheduling problem, their description has been omitted.To illustrate the use of this model, the wind-optimal routes for east-and westbound CEP flights will be scheduled to minimize 4-D trajectory crossing points.
C. Scheduling HeuristicAccording to Ref. 6, an upper bound on the number of variables !w ft j and the number of constraints for the model described in Section II.B is given by the following equations !F " D " X and ! 2 " K "T + J "T + 2 " F " D " X + C " D , respectively.Here F is the total number of flights, T is the total number of time periods (in minutes for this study), J is the total number of sectors, K is the total number of airports, C is the total number of continued flights, D is the maximum cardinality, or number of elements, of the set of feasible times for flight f to be in sector j, and X is the maximum number of sectors (i.e., machines) that a flights passes through.The values of each of these parameters and the upper bounds on the number of variables and constraints for a typical problem encountered in this study is shown in the row labeled "Full Problem" in Table 1.As can be seen from this table, the upper bound on the number of variables and especially the number of constraints can grow exceedingly large.This is due in part to the long time horizon, T=1,800 minutes, and the number of machines involved, J = 9,000, associated with scheduling a days worth of CEP flights.To put the number of machines (i.e., regions of airspace) involved in this study in perspective, there are roughly 800 sectors covering the airspace associated with the 20 Centers that cover the contiguous United States.The row labeled "Sub problem" will be described in detail later in this section.The most effective way to reduce the computational complexity associated with the size of the scheduling problem that was encountered in this study was to (1) reduce the number of machines, J; or (2) reduce the number of time periods, T. Reducing the number of machines, J, involves either increasing the area of coverage of each machine, which is the approach taken in this paper, or developing a sparse collection of specialized machines that accounts for the prevailing traffic flows.Although the former of these two approaches was taken for the current study, future research that addresses the latter of these two approaches would be beneficial.Reducing the number of time periods, T, can be accomplished by either increasing the time step, or partitioning the problem into a number of sub-problems while maintaining the one-minute step size used in this study.Increasing the time step beyond one minute would have greatly decreased the resolution of the grid-based trajectories, which was undesirable for the current application.Therefore the following heuristic was developed to divide the original scheduling problem into a set of N computationally tractable problems to alleviate the temporal factors influencing the computational complexity.
DStep 1: Flight Partitioning Partition the original set of N flights into a set of !N sub flights !{F i i = 1,...,N sub } .For this study, the set of flights was subdivided by leveraging the ration by schedule (RBS) concept that is an integral component of the Federal Aviation Administration's ground delay program (GDP). 13For GDPs, rationing of arrival resources is based on the schedule arrival times of flights, whereas in this study the rationing is based on the scheduled oceanic entry time for each flight.For this study, the flights are assumed to fly on their nominally scheduled routes in the domestic airspace and wind optimal routes in the oceanic airspace.Therefore, the aforementioned oceanic entry point corresponds to the position at which the structured domestic route intersects the horizontal grid that has been overlaid on the CEP.More details regarding this horizontal grid are presented in Section III.A.As a result of the rationing employed in this heuristic, the first n flights that are scheduled to enter the oceanic airspace will appear in F 1 , the next n flights will appear in F 2 .This procedure is continued until the original set of N flights has been allocated to one of the N sub subset of flights.Corresponding to each subset of flights, a subset of machines !{J i i = 1,...N sub } , and time intervals !{T i i = 1,...N sub } is generated.Step2: Flight Scheduling Solve Eqs. ( 1)-( 4) using the i th subset of flights !F i , machines !J i , and times !T i , and store the resulting machine demand !D k i (t) that can be obtained from Eq. (2).Step 3: Adjust Cell Capacity If additional flights remain to be scheduled after the i th stage, then reduce the cell capacity, !S j (t) , appearing in Eq. (2) for the (i+1) th set of flights that remain to be scheduled and repeat Step 2, otherwise terminate.The resulting residual cell capacity will be given by !S j (t) = max ( S j (t) " D k l (t), 0 )l= 0 i # .Using the heuristic outlined above, the original CEP scheduling problem was reduced to a series of six smaller sub-problems.The upper bound on the number of variables and constraints that were encountered in the subproblems when a 30 nmi grid was used are shown in Table 1.It is important to note that because of the problem formulation, the upper bound on the number of variables increases from !F " D " X to !F " D " X + (N # 1) " J "T .This increase is due to the fact that the sector demand variables, which are mentioned in Step 2, have been cast as variables here.Future efforts should address modifications to the current scheduling heuristic that reduce the upper bound on the number of variables.The "Sub problem" results in Table 1 therefore reflect variable counts for the first stage of the sub-divided problem.As can be seen from this table, this approach is an effective means by which the upper bound on the number of variables and constraints can be reduced by a factor of 50 and 25, respectively.Results utilizing this heuristic are shown in Section III.B.An in-depth investigation into the optimality gap between the true optimal solution and the solution resulting from this heuristic is outside the scope of the current study, but will be investigated in a follow on research effort.
III. ResultsThe set of flights was extracted from historical Aircraft Situation Display to Industry (ASDI) 14 data for Dec. 14-16 and 19-20 of 2005.Using the wind fields from the Global Forecast System (GFS) Atmospheric Model 15 and the algorithm for generating "oceanic center boundary (OCB)" wind-optimal routes that is defined in Ref. 4, routes were calculated for each of the flights, whose scheduled flight plan nominally utilized one or more of the seven CEP routes depicted in Fig. 1a.For reference, the wind-optimal routes calculated in Ref. 4 make use of a backward recursion, minimum-travel-time dynamic programming algorithm.An example of the simulated wind-optimal flight tracks from Dec. 20, 2005 between the Hawaiian Islands and the west coast of the United States mainland is shown in Fig. 4a.Before the model that is described in Section II.B can be used to schedule the flights, the 4-D flight trajectories must first be converted from the discrete time varying latitude, longitude, altitude, system !",# ,z,t
() to the time varying, grid based system that involves a row index i, a column index j, and a flight level index k, !(i, j,k,t) .This method was discussed in Section II.A and examples of the trajectories on a 30 nmi grid and a 100 nmi grid are presented in Fig. 4b and4c for all CEP flights that were scheduled to fly on Dec. 20, 2005.Note that twodimensional projections are being used for display purposes, whereas the actual scheduling calculations utilized the three-dimensional grid based trajectories as input, and produced the 4-D flight trajectories (time being the 4 th dimension) as output.Recall that the 30 nmi grid is being used here, because this will soon be the lateral and longitudinal separation standard in the CEP.The 100 nmi grid is being used because it substantially reduces the number of cells/machines that each flight is required to pass through, which in turn reduces the dimensionality of the integer programming-based scheduling model that is being solved.Additionally, the 100 nmi grid is large enough to potentially accommodate two to three flights at any given instance of time.After the job scheduling process, any trajectory crossing points within these larger grid cells could be resolved using tactical ground-based, or flight deck based tactical separation maneuver strategies.The remainder of this section is structured as follows.In Section III.A, characteristics regarding the number of machines, jobs, and operations, associated with the unscheduled flight trajectories will be discussed, so the reader gains an appreciation for the magnitude of the problem being considered in this study.Results from the scheduling algorithm that make use of the heuristic described in Section II.C are presented in Section III.B.
A. Unscheduled Machine, Job, Operation, and Usage StatisticsThe unscheduled machine, job, operation, and occupancy statistics for Dec. 14-16 and 19-20, 2005 are presented in Tables 2 and3 for both the 30 nmi grid and 100 nmi grid, respectively.Here "unscheduled" indicates that all flights are on wind-optimal routes, and no attempt has been made to eliminate or reduce the number of 4-D trajectory crossing points using the scheduling approach described in Section II.Recall that within the current jobshop scheduling formulation, a machine refers to a region of airspace (either 30 nmi x 30 nmi or 100 nmi x 100 nmi); a job refers to a flight; and a flight plan is decomposed into a series of operations each of which by a single machine.The horizontal grid used in this study ranged from 20 O to 50 O north latitude and from 121 O to 154 O west longitude, while the vertical grid extended from flight level 180 to flight level 400 in increments of 1,000 feet.For reference, the horizontal grid used in this study was roughly 1,500 nmi wide by 1,800 miles long.By comparison, a rectangular grid placed over the contiguous U.S. is roughly 2,600 nmi wide by 1,400 nmi long.Therefore the area over which flights were being scheduled covered a region of airspace that was roughly threequarters of the size of the contiguous U.S. The theoretical upper bounds on the number of machines (i.e., cells) that could be used for the 30 nmi and 100 nmi cases were 87,120 and 7,254, respectively.As can be seen by comparing these figures with the actual machine counts that appear in Tables 2 and3, only about 3% of the available machines were used with the 30 nmi grid and roughly 6% of the machines were used with the 100 nmi grid case.The number of unique machines, and the total number of instances each of these machines exceed the capacities for both the 30 nmi and 100 nmi grids, are presented in the forth and fifth columns of Tables 2 and3, respectively.For the 30 nmi grid, the maximum number of operations that can occupy any machine at an instance of time is one for this study, while for the 100 nmi grid the number of operations permitted in a machine was varied between two and three.As can be seen from the results in these tables, the total number of machines requiring scheduling dramatically drops when the grid size is allowed to increase and the associated capacity of each machine is also allowed to increase.For the 30 nmi grid (see Table 2), roughly 10% of all machines required scheduling when the machine capacity was set to one.When the grid size was increased to 100 nmi and the capacity of each machine was two, the number of machines requiring scheduling varied between 8% and 15%, but when the machine capacity was increased to three the number of machines requiring scheduling only ranged between 2% and 5% of all machines.Note that a machine capacity of two or three indicates that two or three flights are allowed to use a machine (i.e., occupy the same region of airspace) at a given instance of time.Finally, the average number of operations per job decreased by roughly a factor of three when transitioning to the large grid.The decrease in machine count and operations per job with the 100 nmi grid is expected to significantly decrease the computational complexity of the integer programming scheduling model that is to be solved for these cases.In addition to the aggregate machine occupancy statistics appearing in Tables 2 and3, the total number of unscheduled operations that require use of a machine is also of interest and is displayed in Fig. 5.This information is beneficial for understanding average and maximum machine usage requirements.In addition, this information indirectly influences the computational complexity of the scheduling algorithm because of the presence of the sector capacity constraint that is defined in Eq. ( 4).When drawing this comparison, it is important to recall that the sector capacity in Eq. ( 4) is specified for a specific sector j and time t, whereas the results presented in Fig. 5 are machine occupancy statistics over an entire day.The most notable difference between the results presented in the two images in Fig. 5 is the maximum number of operations occupying each machine for the 30 nmi and 100 nmi grids.For the 30 nmi grid, each machine tends to process three or fewer operations per day, whereas in the 100 nmi grid case each machine tends to process 16 or more operations per day.Intuitively, these results are expected, because as the airspace is partitioned into large regions the number of operations that require processing in each region should also increase.
Date
Machines with Occupancy
Instances
B. Scheduling ResultsIn this section, the results of scheduling the jobs (i.e., flights) that were discussed in Section III.A using the model and heuristic described in Sections II.B and II.C are presented using the Dec. 20, 2005 data set.Results from other days are expected to yield similar results.Three distinct sets of scheduling results were generated.For the first set of calculations, the 30 nmi grid was used with a cell capacity of one and the problem was divided into six sub-problems using the heuristic described in Section II.C.The second set of calculations utilized the 100 nmi grid with a machine capacity of two and this problem was also divided into six sub-problems.Finally, the third set of calculations utilized the 100 nmi grid with a cell capacity of three and again the problem was divided into six subproblems.As previously discussed, the first set of calculations with the 30 nmi grid is believed to be the most restrictive yet will ensure that all trajectory crossing points are strategically eliminated through job scheduling.The second and third sets of calculations are believed to be less restrictive and allow for a limited number of trajectory crossing points to exist after scheduling, which would later be resolved through tactical separation maneuvers.None of these cases were solvable without first partitioning the original problem into a number of smaller sub-problems on the hardware that was available.Before examining the scheduling results, it is informative to examine the implications of subdividing each of the aforementioned sets of scheduling calculations into sub-problems.In Table 4, the number of variables, constraints, and the runtime (as determined by the Unix "time" command) are presented for each of the 0-1 integer programming problems (see Section II.B) for the third set of calculations, for which the 100 nmi grid was used with a cell capacity of three.These calculations were performed on a Redhat Linux based-laptop computer with a 3.0 GHz Pentium 4 processor and 1 GB of RAM.All scheduling results were generated using AMPL/CPLEX (version 10.0) and the variable and constraint counts listed in Table 4 are values prior to AMPL's "presolve" phase.The total variable count for each stage reduces to less than 80,000 variables after the presolve phase, similarly the number of constraints never exceeds 280,000 after the presolve phase.For this problem, the upper bound on the number of variables and constraints for the full problem would have been 744,625 and 2,185,850, respectively.Similarly, after accounting for the additional sector demand variables in the sub-problem formulation, the upper bound on the number of variables and constraints for any one sub-problem would have been 4,191,625 and 2,185,850, respectively.This assumes K = 2, T = 1800, J = 383, D = 115, X = 37, and F = 175 for the expressions given in Section II.C.As can be seen from this table, subdividing the problem greatly reduced the size of each scheduling stage, and in fact none of the original scheduling problems could be run to their entirety on the hardware available for this study due to memory limitations.The total delays, machine occupancy, and adjusted total time savings for the 175 jobs (i.e., flights) that were scheduled on Dec. 20, 2005 are presented in Table 5.Here the adjusted time savings is equal to the time savings resulting from the wind-optimal routing minus the delay associated with scheduling the flights.By increasing the grid size from 30 nmi to 100 nmi and allowing simultaneous processing of multiple operations per machine, the total delays significantly decreased.For example, the delays decreased by nearly 70% when transitioning from the 30 nmi case with a capacity of one to the 100 nmi case with a capacity of two.This savings of course comes at the expense of leaving a significant number of 4-D trajectory crossing points unresolved in the 100 nmi case, which may require tactical flight spacing controls.A further order-of-magnitude reduction in the total delays was observed when the capacity of the 100 nmi grid cell was increased form two to three.It is also worth noting that all delays were absorbed on the ground for this scheduling case.As expected the number of machines requiring scheduling and the total number instances that machine intersections occurred which required scheduling dramatically reduced when moving from the 30 nmi grid to the 100 nmi grid.Finally, when an average "oceanic center boundary" windoptimal time savings of 4.8 minutes is assumed for each job, 4 then the total adjusted time savings varied between 318 and 808 minutes, which corresponds to an average adjusted time savings of 1.8 and 4.6 minutes, respectively.Assuming an average airline operating cost of $29/hr, 16 the combined routing and scheduling time savings translates into an annual savings that ranges $3.4 million and $8.5 million.Any tactical resolutions required to alleviate 4-D trajectory crossing points in the 100 nmi grid case could further reduce the average per flight time savings.For this initial study, no attempt has been made to estimate the costs associated with these tactical maneuvers.Although the average delay per job ranged from 3.0 minutes for the 30 nmi case to 0.18 minutes for the 100 nmi case with capacity equal to three, the actual per job delays were found to be far less equitable and unevenly distributed.These results are shown in Fig. 6 for the 175 jobs that required scheduling on this day for each of the three scheduling cases.As can be seen from this figure, the individual job delays were found to range from zero for a significant number of flights to 99 minutes for a single flight in one case.The largest job delay cases also tended to occur for jobs with the highest job index.This trend is to be expected since the flights with the larger job indices were some of the last to be scheduled, because of the heuristic that was employed in this study to subdivide the original scheduling problem into N smaller sub-problems.Future studies should consider mechanisms for more equitably distributing delays amongst all flights being scheduled.
Sub-problem
Machines with
IV. ConclusionsThis paper contains the results of the first extensive study designed to assess the impact of strategically scheduling flights on user-preferred routes in the Central East Pacific in order to reduce or eliminate the number of trajectory crossing points.These crossing points were identified in a previous study as a source of concern due to the controller workload associated with ensuring the safe separation of these flights in the oceanic environment.Minimum-time, wind-optimal routes were used as a surrogate for the actual user-preferred routes.To accomplish the flight scheduling, an innovative technique was used to cast the original air traffic flow problem in terms of a job shop scheduling problem.A 0-1 integer programming model was then used to calculate the optimal departure and en route delays necessary to generate feasible flight schedules.The computational tractability of the flight scheduling model was enhanced by utilizing a ration-by-schedule based heuristic to partition the original scheduling problem into N sub-problems.By varying attributes of the machines in the job shop scheduling formation, two distinct types of feasible schedules are obtained.The first type of schedules, which rely on the 30 nmi x 30 nmi machines, are highly restrictive but free of all trajectory crossing points, while the second type, which rely on the 100 nmi x 100 nmi machines, are less restrictive but may require limited tactical flight separation maneuvers to alleviate residual crossing points.After allowing user-preferred routes and strategically reducing the number of 4-D trajectory crossing points, the adjusted per flight time savings varied between 1.8 minutes and 4.6 minutes, respectively, depending on the size of the airspace (i.e., either 30 nmi x 30 nmi or 100 nmi x 100 nmi) associated with the machines in the job shop scheduling problem.The estimated annual economic benefit to the airlines was found to vary between $3.4 million and $8.5 million when wind-optimal routing and strategic flight scheduling was introduced into the CEP.Finally, future extensions to this study will examine the development of sparse grids that take advantage of the prevailing traffic patterns in the CEP in order to reduce computational complexity.In addition, more sophisticated multi-objective cost functions that equitably distribute delays will be examined, as will simpler heuristic based scheduling methodologies.Figure 1 .1Figure 1.Flight histories for [a] eastbound nominal Central East Pacific (CEP) routes and [b] eastbound oceanic wind-optimal CEP routes on Dec. 14, 2006.
subset of machines: !M 48 ,M 47 ,M 38 ,M 37 ,M 36 ,M 28 ,M 27 ,M 19 ,M 18 ,M 9 { }, where O 11 is processed on M 48 , O 12 is processed on M 47 , etc.For clarity, the first two operations associated with job one, J 1 , which are labeled O 11 and O 12 , are explicitly in Fig. 2. Similarly, job two, J 2 , which is represented by the lowermost flight path in this figure is composed of operations !O 2q 1 " q " 8 { } and these eight operations are processed on the following subset of machines: !M 32 ,M 31 ,M 30 ,M 29 ,M 20 ,M 19 ,M 18 ,M 9 { } .The processing time, !l ij , associated with operation !O ij will therefore be the time required for a given flight to traverse grid cell !C ij .
Figure 2 .2Figure 2. Central East Pacific with representative oceanic grid.
Figure 3 .3Figure 3. Illustrative [a] unscheduled and [b] scheduled Gantt charts for four jobs and five machines.
! c f a , were assumed to be twice as large as departure delay costs, !c f g .! N f is the number of sectors in the path of flight f; !P( f ,i) represents the flight path of flight f where !P( f ,1) is the origin and !P( f , N f ) is the destination; F is the set of all flight; and !T f k is the set of feasible times that flight f can occupy airport k.This expression is minimized with respect to the following set of constraints:
Figure 4 .4Figure 4. [a] Oceanic wind optimal flight tracks, [b] tracks on 30 nmi grid, and [c] tracks on 100 nmi grid for Dec. 20, 2005.
Figure 5 .5Figure 5.Total unscheduled operations per machine for [a] the 30 nmi grid and [b] the 100 nmi grid.
Figure 6 .6Figure 6.Total delays per job for (1) 30 nmi grid, six sub-problem, capacity=1; (2) 100 nmi, six subproblems, capacity =2; and (3) 100 nmi grid, six sub-problems, capacity=3.
Table 1 . Upper bound on the number of variables and constraints for a typical 30 nmi grid scheduling problem.1XFTKJCVariableConstraintUpperUpperBoundBoundFull1001001701,800409,00001,700,00019,744,000ProblemSub10010030600401,1000300,0001,308,000problem
Table 2 . Unscheduled machine, job, operation, and occupancy statistics for the 30 nmi grid.2Machine CountJobMachines withInstancesAverage(Airspace Regions)CountOccupancy" 2MachineOperations(Flights)Occupancy" 2per Job12/14/052,4571503291,0897812/15/05 12/16/05 12/19/052,528 2,628 2,559157 206 195!224 300 256!479 1,027 71979 81 8112/20/052,21017531670481
Table 3 . Unscheduled machine, job, operation, and occupancy statistics for the 100 nmi grid.3MachineOccupancy
Table 4 . 0-1 Integer programming variable, constraint, and timing information for the Dec. 20, 2005 data set with a 100 nmi grid, 6 sub-problems, and machine capacity of 3.4Integer ProgrammingInteger ProgrammingRuntime (sec)Variable CountConstraint Count175,558442,4396.22180,326517,99021.43234,913572,4888.74732,6991,213,47117.55599,2011,001,21710.66830,4001,254,38412.0
Table 5 . Dec. 20, 2005 scheduling results for: (1) 30 nmi grid, six sub-problem, capacity=1; (2) 100 nmi, six sub-problems, capacity =2; and (3) 100 nmi grid, six sub-problems, capacity=3.5SchedulingTotalIntersectionsInstances of MachineAdjustedScenarioDelayIntersectionsTotal Time(min)UnscheduledScheduled Unscheduled ScheduledSavings (min)30 nmi,52231607040318capacity=1100 nmi,3116404320529capacity=2100 nmi,3270350808capacity=3
			"Economic Values for FAA Investment and Regulatory Decisions, A Guide," Contract No. DTFA 01-02-C00200, GRA, Inc., Prepared for FAA Office of Aviation Policy and Plans, U.S. Federal Aviation Administration, Washington, DC, Dec. 2004.
		
		
			

				


	
		The Next-Generation Air Transportation System's Joint Planning Environment: A Decision Support System
		
			EdgarWaggoner
		
		
			ScottGoldsmith
		
		
			JoshElliot
		
		10.2514/6.2009-7011
		Version 0.2
		
	
	
		9th AIAA Aviation Technology, Integration, and Operations Conference (ATIO)
		
			American Institute of Aeronautics and Astronautics
			
		
	
	Joint Planning and Development Office. Cited Jan. 25, 2007
	Joint Planning and Development Office, "Concept of Operations for the Next Generation Air Transportation System, Version 0.2," URL: http://techhangar.jpdo.aero/ [Cited Jan. 25, 2007].



	
		Modeling and Simulation of Air Traffic and Changes in the Northern Pacific Airspace: Investigation of the Effects on System Performance
		
			TheresaBrewer-Dougherty
		
		
			BrianColamosca
		
		
			ChristineGerhardt-Falk
		
		
			DaleLivingston
		
		
			LaurenMartin
		
		
			EAElsayed
		
		
			ChristinaSchroepfer
		
		10.2514/atcq.14.2.139
	
	
		Air Traffic Control Quarterly
		Air Traffic Control Quarterly
		1064-3818
		2472-5757
		
			14
			2
			
			2006
			American Institute of Aeronautics and Astronautics (AIAA)
		
	
	Brewer-Dougherty, T., Colamosca, B., Elsayed, E.A., Gerhardt-Falk, C., Livingston, D., Martin, L., and Schroepfer, C., "Modeling and Simulation of Air Traffic Changes in the Northern Pacific Airspace: Investigation of the Effects on System Performance," Air Traffic Control Quarterly, Vol, 14, No. 2, 2006, pp. 139-157.



	
		Application of Airborne Systems for Improving North Atlantic Organized Track System Operations
		
			AlmiraWilliams
		
		
			StephaneMondoloni
		
		
			RichardWestern
		
		
			TamaraKarakis
		
		
			KennethJones
		
		10.2514/6.2005-7338
	
	
		AIAA 5th ATIO and16th Lighter-Than-Air Sys Tech. and Balloon Systems Conferences
		Arlington, VA
		
			American Institute of Aeronautics and Astronautics
			Sept. 26-28, 2005
		
	
	Williams, A., Mondoloni, S., Western, R., Karakis, and Karakis, T., "Application of Airborne Systems for Improving North Atlantic Organized Track System Operations," AIAA 5 th Aviation, Technology, Integration, and Operations Conference, Arlington, VA, Sept. 26-28, 2005.



	
		Central East Pacific Flight Routing
		
			ShonGrabbe
		
		
			BanavarSridhar
		
		
			NadiaCheng
		
		10.2514/6.2006-6773
	
	
		AIAA Guidance, Navigation, and Control Conference and Exhibit
		Keystone, CO
		
			American Institute of Aeronautics and Astronautics
			Aug. 21-14, 2006
		
	
	Grabbe, S., Sridhar, B., and Cheng, N., "Central East Pacific Flight Routing," AIAA Guidance, Navigation, and Control Conference, Keystone, CO, Aug. 21-14, 2006.



	
		Scheduling Algorithms
		
			PeterBrucker
		
		10.1007/978-3-662-03612-9
	
	
		Scheduling Algorithms
		Heidelberg, Germany
		
			Springer Berlin Heidelberg
			1998
			2
		
	
	nd ed.
	Brucker, P., Scheduling Algorithms, 2 nd ed., Springer-Verlag, Heidelberg, Germany, 1998.



	
		The Air Traffic Flow Management Problem with Enroute Capacities
		
			DimitrisBertsimas
		
		
			SarahStockPatterson
		
		10.1287/opre.46.3.406
	
	
		Operations Research
		Operations Research
		0030-364X
		1526-5463
		
			46
			3
			
			May-June 1998
			Institute for Operations Research and the Management Sciences (INFORMS)
		
	
	Bertsimas, D. and Patterson, S.S., "The Air Traffic Flow Management Problem with Enroute Capacities," Operations Research, Vol. 46, No. 3, May-June 1998.



	
		On the Job-Shop Scheduling Problem
		
			AlanSManne
		
		10.1287/opre.8.2.219
	
	
		Operations Research
		Operations Research
		0030-364X
		1526-5463
		
			8
			2
			
			Mar.-Apr. 1960
			Institute for Operations Research and the Management Sciences (INFORMS)
		
	
	Manne, A.S., "On the Job-Shop Scheduling Problem," Operations Research, Vol. 8, No. 2, Mar.-Apr. 1960.



	
		Planning and Scheduling in Manufacturing and Services
		
			MLPinedo
		
		
			2005
			Springer Science+Business Media, Inc
			New York, NY
		
	
	Pinedo, M.L., Planning and Scheduling in Manufacturing and Services, Springer Science+Business Media, Inc., New York, NY, 2005.



	
		Job shop scheduling techniques in semiconductor manufacturing
		
			AmitKumarGupta
		
		
			AppaIyerSivakumar
		
		10.1007/s00170-004-2296-z
	
	
		The International Journal of Advanced Manufacturing Technology
		Int J Adv Manuf Technol
		0268-3768
		1433-3015
		
			27
			11-12
			
			2006
			Springer Science and Business Media LLC
		
	
	Gupta, A.K. and Sivakumar, A.I., "Job shop scheduling techniques in semiconductor manufactoring," International Journal of Advanced Manufacturing Technology, Vol. 27, pp. 1163-1169, 2006.



	
		Distributed air-ground traffic management for en route flight operations
		
			StevenGreen
		
		
			KarlBilimoria
		
		
			MarkBallin
		
		10.2514/6.2000-4064
	
	
		AIAA Guidance, Navigation, and Control Conference and Exhibit
		Denver, CO
		
			American Institute of Aeronautics and Astronautics
			Aug. 14-17, 2000
		
	
	Green, S.M., Bilimoria, K.D., and Ballin, M.G., "Distributed Air-Ground Traffic Management for En Route Flight Operations," AIAA Guidance, Navigation, and Control Conference, Denver, CO, Aug. 14-17, 2000.



	
		Computationally efficient conflict detection methods for air traffic management
		
			BSridhar
		
		
			GBChatterji
		
		10.1109/acc.1997.609708
	
	
		Proceedings of the 1997 American Control Conference (Cat. No.97CH36041)
		the 1997 American Control Conference (Cat. No.97CH36041)Albuquerque, NM
		
			IEEE
			June, 1997
		
	
	Sridhar, B. and Chatterji, G.B., "Computationally Efficient Conflict Detection Methods for Air Traffic Management," Proceedings of the American Control Conference, Albuquerque, NM, June, 1997.



	
		Grid-Based Strategic Air Traffic Conflict Detection
		
			MattRJardin
		
		10.2514/6.2005-5826
		ASDI-FD- 001
	
	
		AIAA Guidance, Navigation, and Control Conference and Exhibit
		San Francisco, CA; Cambridge, MA; Cambridge, MA
		
			American Institute of Aeronautics and Astronautics
			Aug. 15-18, 2005. Oct. 2005. June 29. 2005
			13
		
		
			National Centers for Environmental Predictions, National Oceanic and Atmospheric
		
	
	Report
	EMC Model Documentation
	Jardin, M.R., "Grid-Based Strategic Air Traffic Conflict Detection," AIAA Guidance, Navigation, and Control Conference, San Francisco, CA, Aug. 15-18, 2005. 13 "Enhanced Traffic Management System (ETMS)," Report No. VNTSC-DTS56-TMS-002, Volpe National Transportation Center, U.S. Dept. of Transportation, Cambridge, MA, Oct. 2005. 14 "Aircraft Situation Display To Industry: Functional Description and Interface Control Document," Report No. ASDI-FD- 001, Volpe National Transportation Center, U.S. Dept. of Transportation, Cambridge, MA, June 29, 2005. 15 "EMC Model Documentation," National Centers for Environmental Predictions, National Oceanic and Atmospheric


				
			
		
	
