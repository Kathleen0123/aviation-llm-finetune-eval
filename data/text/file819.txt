
	
	
		
I. IntroductionIn a metroplex or high density terminal operations, typically within 100 nautical miles of an airport or a major airport in a metroplex, resources, such as route segments, fixes, and runway, are normally spatially segregated in order to reduce interactions between different traffic flows and to guarantee separation between aircraft.Such separation may introduce unnecessary inefficiency due to lengthened routes or undesired altitude constraints, introducing integrated arrivals and/or departures with shared resources may help improve the efficiency.In past years, in order to improve efficiency of terminal airspace operations, researchers treated the arrival and departure scheduling problems as separate ones.Many algorithms were developed, such as constrained position shifting (CPS), [1][2][3] CPS with dynamic programming (DP), 4 mixed integer linear programming (MILP), 5 and basic genetic algorithm (GA) 6 for optimizing schedules.Recently, spatial and temporal usage of shared resources started to draw researchers' attention.A couple of approaches were proposed to solve the optimal routing and scheduling problem.In 2009, Capozzi et.al 7 introduced a MILP formulation and applied it to coordinate SFO arrivals and SJC departures.The MILP formulation was found suitable for solving small scale problems but it required significant computational time if the number of flights was greater than 10.Later, the authors 8 further proposed a hybrid algorithm, which combined basic GA and MILP.The GA was used to solve a high level problem (route assignment and sequencing) while MILP was applied to the low level problems.Significant reduction in computational time was achieved when the algorithm was applied to a small problem, but further research is needed for solving realistic and complicated problems.In this paper, a new formulation using a Non-dominated Sorting Genetic Algorithm (NSGA) was introduced because of its ability to handle multi-objective optimization and multiple constraints.The NSGA was demonstrated on a test problem first, then it was applied to an observed problem in LAX terminal airspace.Currently, interactions between LAX arrivals and departures are resolved by spatially segregating arrival and departure routes, which may introduce inefficiency.In this paper, three different separation approaches to the LAX problem were examined including the hybrid separation which combines temporal and spatial separation.The temporal and hybrid separations were formulated and solved using the NSGA algorithm.Furthermore, a First-Come-First-Serve (FCFS) based heuristic method was applied to formulate the hybrid separation to compare with the NSGA algorithm.In this paper, Section II introduces the NSGA algorithm.In section III, a test problem is set up to examine the performance of the new algorithm.In Section IV, the NSGA algorithm is applied to solve the interactions between arrivals and departures in LAX terminal airspace in three different ways.Analysis is then conducted to examine the benefits brought by integrating arrivals and departures spatially and temporally.Comparison between the NSGA and the heuristic method is also conducted.Section V discusses conclusions of the study.
II. MethodologyIn the terminal airspace, methods of integrating flights with shared resources include routing, sequencing, and scheduling.The objective is usually to minimize total delay time for a given set of flights while maintaining separation constraints and achieving proper sequence of landings.The problems are typically highly constrained due to aircraft separation requirements.According to Capozzi's work 8 the MILP formulation using the CPLEX solver requires a large amount of computational time, which might prohibit further application.In this work, a variation of GA is investigated.GAs 9 have been quite successful in a great range of problems.These groups of algorithms are stochastic processes that model two natural phenomena: genetic inheritance and Darwinian evolution.Evolutionary operators include selection, crossover, and mutation.In the basic GA, the selection is based on the fitness functions of the population in the generation.Typical approaches to handle constraints are rejecting or penalizing infeasible individuals.The rejection of infeasible individuals is easy and popular, but it may get stuck when the feasible search space is not convex or the search space is highly constrained.Penalizing infeasible individuals relaxes the constraints, but it is hard to decide the penalty.NSGA II, 10 the NSGA 11 variant used in this research was developed in recent years in order to improve GA's performance on multi-objective optimization and multiple constraint handling.Each individual has two attributes: fitness and errors.Fitness is calculated based on the objective, whereas errors are calculated if constraints are violated.Compared with the basic GA, the only change in NSGA is the selection process.Instead of fitness, the population is evaluated and ranked based on the ordering of their dominance (Pareto dominance) and is sorted into a hierarchy of subgroups.Assuming the objective is to minimize and the constraint function g has to be nonnegative, individual A is dominated by individual B if:   f A > f B , if g A ≥0 and g B ≥0, or, g A = g B g A < g B , if g A < 0 and g B < 0, or, g B > 0 and g A < 0 (1)Where f is the objective and g is the constraint value.In order to estimate the density of solutions surrounding a particular solution in the population, an average distance between two neighboring solutions on either side of the particular solution along each objective is calculated and is termed as the crowding distance.Crowding distance between members of each sub-group introduces diversity among nondominated solutions.Figure 1 demonstrates the selection procedure in NSGA II.At generation t, assuming P is the parent population and Q is the offspring population.Both P and Q have N individuals.They are first combined to a 2N population R t , then individuals in R t are sorted based on their Pareto dominance.The best nondominated solutions are in set F 1 .After calculating crowding distances of set F 1 , if the size of F 1 is smaller than N, F 1 will be added into the new population P t+1 .Then, solutions from set F 2 are added to the new population, and so on.This process will continue unless the size of P t+1 exceeds N .In order to make sure that the size of P t+1 reaches N , the solutions from the next F i will be partially chosen in terms of their crowding distances .The order in the flow is defined as Eqn. 2. After the selection process, the remaining processes are the same as basic GAs.A B if rank A < rank B , or (rank A = rank B and crowding distance A > crowding distance B )(2)Combine parent and offspring populationR t =P t U Q t Non-dominated-sort(R t ) →F (F 1 F 2 F 3 …) P t+1 = Ø & i = 1 size(P t+1 +F i ) ≤N Crowding-distance-assignment(F i ) P t+1 =P t+1 U F i i = i + 1 Sort(F i , p ) P t+1 = P t+1 U F i [1:( N-size(P t+1 )]Selection: generation = tCrowding-distance-assignment(F i ) In this work, bit strings were used to represent solutions.Therefore, the search space is discrete and it helps speed up the process without sacrificing much optimality.Usually, the population size was set to 800 and the maximum number of generations was defined to be 300.Because random initialization was used, any problem set in this study was usually run over three times and the best results were reported.All problems in this work were solved on a MacOS platform with 2x2.66GHz 6-Core Intel Xeon and 8GB RAM.
III. A Test ProblemTo test the formulation using the NSGA algorithm, a test problem was rebuilt based on Capozzi's papers. 7,8 n this problem, two departure flows are assumed to come from two neighboring airports OAK and SJC, respectively.As shown in Fig. 2, the two departure fixes W 0 and W 1 are defined as shared resources.The distance for both W 1 to OAK (route R 4 ) and W 0 to OAK (route R 3 ) is 45 miles; The distance for both W 1 to SJC (route R 2 ) and W 0 to SJC (route R 1 ) is 56 miles.The flight departure schedule is described in Table 1, which is the same as the "phased peak demand" mentioned in Capozzi's paper. 7Aircraft were assumed to be of the same type.The minimum speed of aircraft was defined to be 140 knots and the maximum speed was 180 knots.The minimum separation required at runway D r was set to 3 nautical miles for all aircraft pairs and the minimum separation at departure fixes D f was defined to be 4 nautical miles.The maximum delay was assumed to be 200 seconds.Flight time uncertainty was included using a time error (δ) of 60 seconds.Two scenarios of fix usage were examined: segregated vs. shared.In the "segregated" case, only R 1 and R 4 are available, whereas in the "shared" case, all four routes are available.In this problem formulation, decision variables for each flight i are ground delays (d i ), aircraft speeds (v i ), and route options (r i ).For each flight, its time to exit a departure fix (tp i ) and its time to take off (tr i ) can be expressed as in Eqn. 3, where t i0 is the scheduled departure time as shown in Table 1.There are two routes for either SJC or OAK departures: r i = 0 represents the default route (R 1 for SJC departures and R 4 for OAK departures) and r i = 1 represents the second route (R 2 for SJC departures and R 3 for OAK departures).R d means the default route and R s is the second route.Variable v i denotes the airspeed.Therefore, in NSGA, there are three genes (d i , r i , v i ) for each flight.   tr i = t i0 + d i , tp i = tr i + ((1 -r i ) • R d + r i • R s )/v i (3) f = tp i (4)The objective is minimizing the total time as in Eqn. 4. The constrains are: the separation at departure fixes (Eqn.5) and separation at runways (Eqn.6).The problem with 20 flights was modelled and solved without multiple windows that were used in MILP formulations. 7The formulations in Eqn. 3 and 5 are built for the case of shared fixes.For the case of segregated fixes, r i can be simply fixed at zero.|tp i -tp j |•[r i •r j + (1 -r i )•(1 -r j )] -D f /v k -δ≥0, (i =j, if tp i > tp j , k = j otherwise k = i) (5) |tr i -tr j | -D r /v k -δ≥0, (i =j, if tp i > tp j , k = j otherwise k = i)(6)Table 2 shows the resulting delays with segregated and shared fixes, respectively.A reduction of 65% was achieved by shared departure fixes.The total delay saving was 440 seconds (from 677 seconds to 237 seconds) over segregated fixes.Among them, 516 seconds were saved from ground delay with increased airborne delay of 76 seconds.Makespans were the same because it was constrained purely by flight schedule in this problem.Figure 3(a) and 3(b) presented the results for segregated and shared fixes, respectively.The vertical axes are way points.The times of SJCRWY and OAKRWY represent the scheduled departure times, while the times of SJC and OAK are departure times computed by the algorithm.The differences denotes the suggested delays.Note that many SJC departures used W 1 which wasn't available to them in the "segregated" case and six out of ten OAK departures used W 0 which wasn't available to them in the "segregated" case.Sharing departure fixes provides flexibility in route options, and the departure fixes can therefore be fully used to improve operation efficiency.This test showed that the new formulation with the NSGA performs well.It solved the 20 flight problem in around 30 seconds without any parallelization.Because one of the strengths of GA-like algorithms is parallelization, significant reduction in computational time could be easily realized.
IV. Case Study: LAX Terminal AirspaceThe interactions between arrivals and departures in LAX terminal airspace was identified to be a potential scheduling problem that could be solved more efficiently than current procedures.This section describes the model, method, and analysis for this problem.
A. DescriptionAccording to the Standard Terminal Arrival Routes (STARs) of Los Angeles terminal airspace, arrivals to Los Angeles airport (LAX) from the North are required to take procedure SADDE6, which is to fly from Fillmore(FIM) to Santa Monica(SMO) via SYMON and SADDE fixes.Based on the Standard Instrument Departures (SIDs), LAX departures to the North need to follow procedure CASTA2, which is to take off from Runway 24R to WPT1 a through NAANC and GHART (see Fig. 4 ).In order to spatially segregate these two flows, arrival flights from FIM are required to maintain their flight altitudes above 12,000 feet at Fix GHART, while departures have to keep theirs at or below 9,000 feet at the same fix.As studied by Timar, 12 approximately 28.1% of LAX arrivals use the SADDE6 procedure and 10.4% of LAX departures use the CASTA2 procedure.In a typical day, this can be translated to 220 arrival flights and 80 departure flights.The total cost or delay in a day due to the arrival departure interaction is approximately 380 minutes with spatially segregated routes in the SIDs and STARs.Could it be improved?The following study addresses this using three different methods: spatial, temporal and hybrid separation.Spatial separation uses the same strategy as in SIDs and STARs.Temporal separation utilizes the direct routes with conflicts resolved solely with temporal controls.As in Fig. 4, the direct route for departures is RWY-WPT2-WPT1, and for FIM arrivals it is FIM-WPT1-SMO-SUTIE.Hybrid separation applies both temporal and spatial separation.
B. ModelingThree flows are taken into account in this work: arrivals from FIM (Set A 1 ), departures from Runway 24L(Set D), and arrival flights from the East towards SUTIE(Set A 2 ).Table 3 shows scheduled arrival times (t i0 ) at FIM, RWY, and SUTIE, respectively.Historical traffic schedules between 18:30 pm to 19pm (UTC time) on March 5, 2010 were used as a reference for generating the schedules.There are a total of 15 flights a Points WPT1 and WPT2 are made up for simplicity.including five arrivals from FIM, six arrivals from east of LAX, and four departures from Runway 24L.In this work, flights were assumed to be the same type.
Decision VariablesAssume that route R 1 refers to RWY-WPT2-WPT1 (direct route for departures), R 2 represents RWY-NAANC-GHART-AJAYE-WPT1 (lengthened route for departures), R 3 denotes FIM-WPT1-SMO-SUTIE (direct route for arrivals), and R 4 is the route of FIM-SADDE-GHART-WPT2-SMO-SUTIE (lengthened route for arrivals).In the formulation of hybrid separation, four design variables were defined for each arrival flight in Set A 1 :• d1 i -The delay at or before FIM.• r i -If r i = 0, the direct route R 3 will be chosen, otherwise, R 4 is selected.• v i -The aircraft speed between FIM and WPT1 when flying the direct route or the speed between FIM and WPT2 if flying the indirect route.• d2 i -The delay at or before SUTIE to ensure separation at SUTIE.For a departure flight in set D, three decision variables were defined:• d i -The delay before departure.• r i -If r i = 0, the direct route R 1 will be chosen, otherwise R 2 is selected.• v i -The speed from departure to WPT1.Only one decision variable exists for an arrival flight in Set A 2 :• d i -The delay time at or before SUTIE to ensure separation with A 1 at SUTIE.In the case of temporal separation, route options (r i ) in Set D and Set A 1 are fixed at zero so both departures and arrivals take direct routes.The only way to meet the separation requirements is to use time control.In the study, two scenarios were set up.In scenario one, no aircraft is allowed to arrive/depart early or speed up.In scenario two, aircraft are allowed to arrive/depart early or speed up up to 30 seconds.
ConstraintsEqn. 7 shows the expression for FIM arrivals.Let R 3 denote route FIM-WPT1 and R 4 represents route FIM-SADDE-WPT2, which are partial routes of R 3 and R 4 , respectively.Variable L R i represents the length or distance of route R i .Variable t F IM (F IM,i) is defined to be the time when flight i arrives at FIM. Variable t F IM (W P T,i) denotes the arrival time of flight i at WPT1 if a direct route is chosen, or the arrival time of flight i at WPT2 if the indirect route is selected.Variable t F IM (SU T IE,i) refers to the arrival time of flight i at SUTIE.The minimum travel time between WPT1 to SUTIE is defined to be 290 seconds.When R 4 is activated, the minimum travel time between WPT2 to SUTIE is set to 220 seconds.       t F IM (F IM,i) = t i0 + d1 i F IM (W P T,i) = t F IM (F IM,i) + [(1 -r i ) • L R 3 + r i • L R 4 ]/v i t F IM (SU T IE,i) = t F IM (W P T,i) + (1 -r i )•(d2 i + 290) + r i •(d2 i + 220)(7)Eqn. 8 shows the expression for departures, where t DEP (RW Y,j) represents the time flight j departs from RWY, variable t DEP (W P T 2,j) denotes the time flight j arrives at WPT2, and R 1 refers to the route RWY-WPT2.Variable t DEP (W P T 1,j) represents the time flight j arrives at WPT1.       t DEP (RW Y,j) = t i0 + d j t DEP (W P T 2,j) = t DEP (RW Y,j) + (1 -r j ) • L R 1 /v j t DEP (W P T 1,j) = t DEP (RW Y,j) + [(1 -r j ) • L R1 + r j • L R2 ]/v j(8)Eqn. 9 presents the expression for A 2 arrivals with simply one decision variable.t SU T IE (SU T IE,k) = t i0 + d k(9)Separation constraints were applied at fixes that could have potential violations, such as FIM, RWY, WPT1, WPT2, and SUTIE.Separation requirements were 3 nmi at the runway and 4 nmi elsewhere.As in the previous section, an uncertainty buffer of δ was added in the separation constraints for a sensitivity study.
ObjectiveThe objective is to minimize the sum of exit times, as shown in Eqn.10.For departures it is the time when a flight leaves the waypoint WPT1.For arrivals, it is the time when a flight reaches waypoint SUTIE.J = i,j,k t F IM (SU T IE,i) + t DEP (W P T 1,j) + t SU T IE (SU T IE,k)(10)
C. ResultsIn this section, results using three different separation methods are presented and compared.Different buffers are set up to deal with uncertainty and the impacts are studied.In addition, two scenarios are defined: only delays are considered in the first one, while early arrivals are allowed in the second case.For any flight, its unimpeded flight time (fly via direct route without any consideration of separation from other flights) is treated as a baseline.Beyond that, any extra flight time will be called delay.
Comparison of separation methodsThis section compares separation methods when uncertainty buffers were defined to be zero.In the case of spatial separation, because the indirect route was the only option, there exists associated extra flight time of 771 seconds.Because all flights were assumed to be the same aircraft type, the total delay can be computed manually.Including route-caused delay the total delay is 1,001 seconds as shown in the Table 4.It can be seen that without uncertainty buffers the delay with hybrid separation was 357 seconds -a reduction of 64% or 10.7 minutes compared to the 1,001 second delay with spatial separation.While in this case, the temporal separation also achieved much less delay than the spatial separation.The reduction was 59% or 9.8 minutes.Tables 5, 6 and 7 show individual flight results for sets A 1 , D 1 , and A 2 , respectively, when the hybrid separation is applied.Table 5 provides the results for arrivals from FIM.It indicates that three of five arrival flights can make use of the direct route to reduce overall delay.In Table 6, all four departures flew their direct routes.Among the arrivals from the East, two flights were assigned some delays.The resulting delay under hybrid separation was reduced to 357 seconds as shown in Table 4.
Impact of uncertaintyThe results of schedulers could be sensitive to the uncertainty of flight times.Robustness is required in actual operations.The easy and popular way to increase the robustness is to introduce an uncertainty buffer for flight times.As a trade-off, adding buffers causes additional delays.In this study, the buffers of 30 and 60 seconds were applied.Table 4 shows the results.In the table, the temporal separation introduced much less delay than the spatial separation in the deterministic case, but when the uncertainty buffer increased to 60 seconds, the temporal separation caused more delay than spatial separation.This showed that temporal separation was sensitive to the uncertainty buffer and corresponding schedules might be undesired in actual operations.The hybrid approach generated the least delay compared with the other two approaches, although the reduction decreased to 183 seconds when the buffer was 60 seconds.Results in Table 4 show the trade-off between buffer size and delays.In order to find out the best balance, an uncertainty study is required for future work.and6 show the time lines for all metering points when the buffer is zero and 30 seconds, respectively, where the hybrid approach was applied.SUT stands for SUTIE for simplicity.Each flight has a safe zone shown as a grey box in front of its arrival time.These safe zones can be packed in Fig. 5, but they are well separated by a 30 second buffer in Fig. 6.Note how flight loading of WPT1 and WPT2 changes significantly between 0 and 30 seconds.When the buffer is zero, FIM001, FIM004, and FIM005 are proposed to fly the direct route, but when the buffer increases to 30 seconds, the other FIM arrivals -FIM002 and FIM003 -are proposed to take the short cut.
Impact of early arrivalsAllowing early arrival or speeding up increases flexibility and reduces delay.In the previous cases, no early arrival or speeding up was allowed.In this section, early arrival is allowed up to 30 seconds.The results are presented in Table 8.For spatial separation, the delay was simply calculated by shifting each aircraft 30 seconds earlier than the previous case.The temporal and hybrid separations were solved using the NSGA algorithm as in previous sections.As shown in the table, when the uncertainty buffer was zero, total delays caused by both temporal and hybrid separation were negative, which means on average aircraft arrived early.The delay reduction from spatial separation to hybrid separation was 12.5 minutes when the uncertainty buffer is zero and the reduction decreased to 3 minutes when the buffer increased to 60 seconds.On the other hand, the uncertainty buffer in flight time still plays an important role.When the buffer increased, the delay required increased quickly, especially for the temporal separation.The performance of the NSGA algorithm is compared with that of a FCFS based heuristic method.Because this problem involves route option and multiple scheduling points, the rules of FCFS may not be straightforward and have to be clarified:• The estimated or scheduled entering times are used as references for setting up priority.For FIM arrivals, the entering times are the arrival times to fix FIM.For departures, they are the estimated times of leaving RWY.And the estimated SUTIE arrival times are used as references for arrivals from the East.Each flight decides its route based on the FCFS rule in the order of their entering times.The route that causes the lowest delay at the time will be chosen.• The conflicting flights in metering points WPT1, WPT2, and SUTIE are resolved based on the estimated arrival times, not their entering times.For instance, assume flight A has an earlier entering time than flight B, but the estimated arrival time of flight A at fix F is later than flight B. If flight A would conflict with flight B at fix F, then flight A would be delayed before it reaches fix F. With this rule, the arrival sequences at these metering points are actually allowed to be changed.This may be different from the strict FCFS rule.• No flight should be delayed more than M seconds at any fix.M is set to 200 in this work.• The order of flights in the same flow should be kept, e.g.FIM arrivals, SUTIE arrivals, and departures.In the NSGA algorithm, the resolution of delay was approximately five to ten seconds.Table 9 presents the results using the heuristic method with a delay resolution of one second.When the uncertainty buffer is zero, the results generated by the NSGA algorithm can save about 42% over the heuristics method even though the latter has high resolution.When the buffer size increases, that saving was reduced to 20% or 9%, which was probably due to the decreased solution space.Overall, the proposed NSGA algorithm outperformed the heuristic method with a great difference.Unlike conventional scheduling problems, the optimization method showed greater advantage over heuristics due to the complicated solution space.On the other hand, it is also noticed that when the buffer size is large enough, the benefit of integration of arrivals and departures could disappear and the heuristic method becomes a good choice due to its computational easiness.
V. ConclusionThe integration of departures and arrivals seems promising in improving operational efficiency in terminal airspace.The problem combines routing and scheduling problems, which further challenges the MILP solver.This work introduced a variation of genetic algorithm -NSGA.The NSGA was used because it is better than basic GA in handling constraints.Results with a test problem showed that the new formulation with NSGA can solve the problem in a fast time fashion.A potential application of integrated arrivals and departures was identified in LAX terminal airspace.The arrival and departure route structures were modelled with three different strategies: spatial separation, temporal separation, and hybrid separation.A problem was set up based on a historical traffic schedule with a total of 15 flights and three flows included.The results showed that although the temporal separation introduced much less delay than the spatial separation, it caused more delay than the latter when the uncertainty buffer increased to 60 seconds.The hybrid separation outperformed both the temporal and the spatial separations: It reduced unnecessary delay by 64% or 10.7 minutes if no early arrival/departure or speeding up was allowed; And if early arrival/departure or speeding up was allowed, the saving increased to 12.5 minutes.Compared with a FCFS based heuristic method, the schedules produced by the NSGA saved flight time up to 42%, which showed greater advantage over FCFS than typically seen in conventional scheduling problems.Overall, this study showed that it is promising to improve operation efficiency in LAX terminal airspace by integrating departures and arrivals using hybrid separation with the NSGA algorithm.Apparently, such efficiency may vary with aircraft departure and arrival schedules.The proposed method can be applied in a fast time fashion to decide if benefit exists and how to quantify it.Therefore, it can help decision makers to operate properly.In order to achieve this goal, an analysis needs to be completed for the uncertainty in the schedules.In the future work, such uncertainty analysis will be conducted.The robustness of the benefits and controllers' workload will be examined by imposing flight time perturbations.The balancing point for the trade-off between robustness and delay will be studied.The schedulers using different separation approaches and different algorithms will be investigated and compared.Figure 1 .1Figure 1.NSGA II selection procedure
4 Figure 2 .42Figure 2. Shared departure fixes for SJC and OAK
Figure 3 .3Figure 3. Schedules for (a) segregated departure fixes and (b) shared departure fixes
Figure 4 .4Figure 4. Interactions between SADDE arrivals and CASTA departures
Figure 5 .5Figure 5.Time Line with hybrid separation and buffer = 0 seconds
Figure 6 .6Figure 6.Time Line with hybrid separation and buffer = 30 seconds
Table 1 .1Scheduled departure time
Table 2 .2Comparison of delaysGround delay(sec) Airborne delay (sec) Total delay (sec) Makespan (sec)Segregated645326772900Shared1291082372900OAKRWYOAKW1W0SJC0 SJCRWY50010001500200025003000Time (second)
Table 3 .3Scheduled arrival timesOrder FIM (sec) RWY (sec) SUITE (sec)103043021352986713263540107048601240121051230NA13766NANA1780
Table 4 .4Total delay with different separation methodsuncertainty buffer Spatial Temporal Hybrid0 s1,001s413 s357 ss1,163 s776 s759 s60 s1,673 s1,808 s1,490 s
Table 5 .5Results for A 1 arrivals with hybrid separation and zero uncertaintyA 1 Arrivals delay at FIM (s)RouteSpeed (kt) delay at SUITE (s)Flight 10direct34939Flight 268indirect34415Flight 30indirect31912Flight 40direct3500Flight 50direct3500
Table 6 .6Results for departures (D 1 ) with hybrid separation and zero uncertaintyDepartures delay before departure (s) Route Speed (kt)Flight 10direct250Flight 20direct250Flight 38direct250Flight 40direct250
Table 7 .7Results for A 2 arrivals with hybrid separation and zero uncertaintyA 2 Arrivals delay before SUITE (s)Flight 10Flight 20Flight 38Flight 40Flight 562Flight 64
Table 8 .8Total delay when early arrival is alloweduncertainty buffer Spatial Temporal Hybrid0 s551 s-170 s-195 s30 s713 s393 s309 s60 s1,223 s1,338 s1,041 s4. NSGA algorithm v.s Heuristic method
Table 9 .9Delay with hybrid separation using different methodsuncertainty buffer NSGA algorithm Heuristic Difference0 s357 s611 s42%30 s758 s950 s20%60 s1,490 s1,638 s9%
		
		
			

				


	
		The dynamic scheduling of aircraft in the near terminal area
		
			RGDear
		
		10.1016/0041-1647(78)90133-8
		R76-9
	
	
		Transportation Research
		Transportation Research
		0041-1647
		
			12
			3
			
			September 1976
			Elsevier BV
		
	
	Tech. Rep. Flight Transportation Laboratory Report
	Dear, R. G., "The Dynamic Scheduling of Aircraft in the Near Terminal Area," Tech. Rep. Flight Transportation Laboratory Report R76-9, MIT, September 1976.



	
		An algorithm for computer assisted sequencing and scheduling of terminal area operations
		
			RogerGDear
		
		
			YosefSSherif
		
		10.1016/0191-2607(91)90132-a
	
	
		Transportation Research Part A: General
		Transportation Research Part A: General
		0191-2607
		
			25
			2-3
			
			1991
			Elsevier BV
		
	
	Dear, R. G. and Sherif, Y. S., "An Algorithm For Computer Assisted Sequencing and Scheduling of Terminal Operations," Transportation Research A, Vol. 25A, No. 2/3, 1991.



	
		Analysis of Delay Reducing and Fuel Saving Sequencing and Spacing Algorithms for Arrival Spacing
		
			FNeuman
		
		
			HErzberger
		
		103880
		
			October 1991
		
	
	Tech. Rep. NASA Technical Memorandum
	Neuman, F. and Erzberger, H., "Analysis of Delay Reducing and Fuel Saving Sequencing and Spacing Algorithms for Arrival Spacing," Tech. Rep. NASA Technical Memorandum 103880, October 1991.



	
		Scheduling Aircraft Landings Under Constrained Position Shifting
		
			HamsaBalakrishnan
		
		
			BalaChandran
		
		10.2514/6.2006-6320
	
	
		AIAA Guidance, Navigation, and Control Conference and Exhibit
		Keystone, CO
		
			American Institute of Aeronautics and Astronautics
			August 2006
			
		
	
	Balakrishnan, H. and Chandran, B., "Scheduling Aircraft Landings Under Constrained Position Shifting," AIAA Guid- ance, Navigation, and Control Conference and Exhibit, Keystone, CO, 21-24 August 2006.



	
		Scheduling Aircraft Landings—The Static Case
		
			JEBeasley
		
		
			MKrishnamoorthy
		
		
			YMSharaiha
		
		
			DAbramson
		
		10.1287/trsc.34.2.180.12302
	
	
		Transportation Science
		Transportation Science
		0041-1655
		1526-5447
		
			34
			2
			
			2000
			Institute for Operations Research and the Management Sciences (INFORMS)
		
	
	Beasley, J. E., Krishnamoorthy, M., Sharaiha, Y. M., and Abramson, D., "Scheduling Aircraft Landings -The Static Case," Transportation Science, Vol. 34, No. 2, 2000.



	
		Scheduling Aircraft Landings to Closely Spaced Parallel Runways
		
			MKupfer
		
	
	
		The Eighth USA/Europe Air Traffic Management Research and Development Seminar
		Napa, CA
		
			June 2009
		
	
	Kupfer, M., "Scheduling Aircraft Landings to Closely Spaced Parallel Runways," The Eighth USA/Europe Air Traffic Management Research and Development Seminar , Napa, CA, June 2009.



	
		Towards Optimal Routing and Scheduling of Metroplex Operations
		
			BrianCapozzi
		
		
			StephenAtkins
		
		
			SeongimChoi
		
		10.2514/6.2009-7037
	
	
		9th AIAA Aviation Technology, Integration, and Operations Conference (ATIO)
		Hilton Head, South Carolina
		
			American Institute of Aeronautics and Astronautics
			September 2009
			
		
	
	Capozzi, B. J. and Atkins, S. C., "Towards Optimal Routing and Scheduling of Metroplex Operations," 9th AIAA Aviation Technology, Integration, and Operations Conference(ATIO), Hilton Head, South Carolina, 21-23 September 2009.



	
		A Hybrid Optimization Approach to Air Traffic Management for Metroplex Operations
		
			BrianCapozzi
		
		
			StephenAtkins
		
		10.2514/6.2010-9062
	
	
		10th AIAA Aviation Technology, Integration, and Operations (ATIO) Conference
		
			American Institute of Aeronautics and Astronautics
			
		
	
	Capozzi, B. J. and Atkins, S. C., "A Hybrid Optimization Approach to Air Traffic Management for Metroplex Operations,"



	
		Departure Efficiency Benefits of Terminal RNAV Operations at Dallas-Fort Worth International Airport
		
			RalfMayer
		
		10.2514/6.2006-7774
	
	
		6th AIAA Aviation Technology, Integration and Operations Conference (ATIO)
		Fort Worth, Texas
		
			American Institute of Aeronautics and Astronautics
			September 2010
			
		
	
	AIAA Aviation Technology, Integration and Operations Conference (ATIO), Fort Worth, Texas, 13-15 September 2010.



	
		Genetic Algorithms + Data Structures = Evolution Programs
		
			ZMichaelwicz
		
		10.1007/978-3-662-03315-9
		
			1996
			Springer Berlin Heidelberg
			Berlin Heidelberg
		
	
	Third Edition
	Michaelwicz, Z., Genetic Algorithms + Data Structures = Evolution Programs, Third Edition, Springer-Verlag Berlin Heidelberg, 1996.



	
		A fast and elitist multiobjective genetic algorithm: NSGA-II
		
			KDeb
		
		
			APratap
		
		
			SAgarwal
		
		
			TMeyarivan
		
		10.1109/4235.996017
	
	
		IEEE Transactions on Evolutionary Computation
		IEEE Trans. Evol. Computat.
		1089-778X
		
			6
			2
			
			2002
			Institute of Electrical and Electronics Engineers (IEEE)
		
	
	Deb, K., Pretap, A., Agarwal, S., and Meyarivan, T., "A Fast and Elitist Multiobjective Genetic Algorithm: NSGA-II," IEEE Transactions On Evolutionary Computation, Vol. 6, No. 2, 2002.



	
		Muiltiobjective Optimization Using Nondominated Sorting in Genetic Algorithms
		
			NSrinivas
		
		
			KalyanmoyDeb
		
		10.1162/evco.1994.2.3.221
	
	
		Evolutionary Computation
		Evolutionary Computation
		1063-6560
		1530-9304
		
			2
			3
			
			1995
			MIT Press - Journals
		
	
	Srinivas, N. and Deb, K., "Multi-Objective Function Optimization using Non-dominated Sorting Genetic Algorithms," Evolutionary Computation, Vol. 2, No. 3, 1995.



	
		Super Density Operations Airspace Modeling for the Southern California Metroplex
		
			SebastianTimar
		
		
			GauravNagle
		
		
			AdityaSaraf
		
		
			PeterYu
		
		
			PeterHunt
		
		
			AndrewTrapani
		
		
			NickJohnson
		
		10.2514/6.2011-6535
	
	
		AIAA Modeling and Simulation Technologies Conference
		Portland, Oregon
		
			American Institute of Aeronautics and Astronautics
			August 2011
			
		
	
	Timar, S. D., Nagle, G., Saraf, A., Yu, P., Hunter, P., Trapani, A., and Johnson, N., "Super Density Operations Airspace Modeling for the Southern California Metroplex," AIAA Modeling and Simulation Technology Conference, Portland, Oregon, 08-11 August 2011.


				
			
		
	
