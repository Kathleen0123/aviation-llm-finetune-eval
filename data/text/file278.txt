
	
	
		
I. IntroductionIRCRAFT departing from an airport face numerous constraints in the scheduling of their departure times.These constraints include wake vortex separation for successive departures, miles-in-trail separation for aircraft bound for the same departure fixes, and time-window or prioritization constraints for individual flights.However, departure runway operations also include runway crossings by arrival aircraft; arrival aircraft may need to cross the departure runway to come to the terminal.Efficient scheduling of departure operations would require scheduling runway crossings and departures simultaneously.Addressing all the above constraints in a single framework is critical to increasing airport capacity and efficiency for the Next Generation Air Transport System (NextGen) concepts.Prior research on runway scheduling has addressed some of the above issues, though most of the work has been devoted to scheduling arrival aircraft.The aircraft landing problem has been treated as an example of the generic job-shop scheduling problem and a dynamic programming algorithm for single machine scheduling was developed and applied to aircraft landing 1 .Other papers also address the aircraft landing problem as a job-shop scheduling problem 2-4 using a mixed integer formulation.Constraint Position Shifting (CPS) has been proposed for the dynamic scheduling of arrival aircraft along with heuristics to solve it 5 .The idea of CPS was further incorporated into a dynamic programming approach for scheduling aircraft landings 6 and was later extended to departure scheduling 7 .CPS reduces the solution space by limiting the number of positions an aircraft can occupy in the sequence and thus could lead to sub-optimal solutions.The dynamic programming approach in Ref. 7 has been extended into a generalized dynamic program for solving the departure scheduling problem 8 .This method determines pareto-optimal solutions for multiple objectives but does not assign aircraft to available "queues" (when the taxiway area next to a departure runway is operated as queues).The decision factors behind such pre-determined queues are not explicit and could potentially be based on a subjective controller input.In a recent paper, the authors determine runway queues for individual aircraft and schedule departures within the same framework, with the framework being generic to both with and without queue situations 9 .However, there is little evidence of a unified approach for managing departure queues, departure scheduling and runway crossing scheduling at the same time in a Associate Research Scientist, UARC, Building 210, MS 210-8, Moffett Field, CA-94035.ggupta@ucsc.edu.b Associate Research Scientist, UARC, Building 210, MS 210-8, Moffett Field, CA-94035.wmalik@ucsc.edu.c Aerospace Engineer, NASA Ames Research Center, MS 210-6, Moffett Field, CA 94035.yoon.c.jung@nasa.gov.A the current literature.Runway queue assignment, departure scheduling and runway crossing scheduling might be done in multiple steps by the same controller.In such cases, the large number of decisions to be made and the emphasis on safety might result in poor schedules due to divergence in the three processes, especially in the case of increased traffic.There is no evidence to suggest a uniform manner for these processes in current operations, although there is evidence of use of a first-come-first-serve rule being used at other parts of an airport 10 .Thus, determining runway queues for individual aircraft and scheduling departures as well as arrival crossings within the same, generic framework would potentially improve efficiency and throughput of overall surface operations at busy airports.This paper presents a Mixed Integer Linear Program (MILP) for incorporating active runway crossings in departure scheduling, extending on prior work in Ref. 9. The model assigns aircraft to available departure queues and schedules runway departure times as well as crossing times, explicitly considering constraints for wake separation and departure fix restrictions.The paper builds on previous work on MILP-based departure scheduling 9 , and considers the case where aircraft cross from pre-determined queues based on pilot selection.The rest of this paper is organized as follows: Section II discusses the approach, illustrating it using Dallas-Fort Worth International Airport (DFW).Section III presents the mathematical formulation, describing the notation and the interpretation of the expressions.This is followed by a brief note on the computational enhancements.Section IV compares the results from the MILP-based solution to a first-come-first-serve scheme in a deterministic setting for numerous randomized scenarios based on real-world settings.The choice of objective function is also discussed.Section V concludes with directions for future research.
II. ApproachThe MILP takes as input the sequence of departure (and arrival) aircraft for a runway, along with their earliest takeoff (and crossing) times and an optional prioritization scheme based on a time-window of take-off (and crossing) for each aircraft.The model then assigns departure aircraft to the available departure queues and schedules runway usage times for both departure and arrival crossings.The MILP approach assumes a deterministic entry time for each aircraft at the entrance of the runway queue system or crossing, depending on whether it is an arrival or departure aircraft.The holding area adjacent to the departure runway is modeled as a series of queues operated on a first-in-first-out (FIFO) basis.The number of queues depends on the airport and runway configuration and is an input to the model.This is illustrated in Figure 1, using runway 17R at DFW airport as an example.The figure shows multiple taxiways feeding into three different "departure queues" which then feed into the departure runway.As shown in Ref. 9, there are multiple ways of managing the departure queue area, namely FIFO queues where aircraft need to be assigned to the queues, FIFO queues where queues are pre-assigned, and no queues.The formulation presented here addresses all these configurations.Thus, runway usage is modeled as a double assignment problem; aircraft expected to depart within the planning horizon are assigned to a departure queue and then all aircraft, either arrivals or departures, are assigned a runway usage time based on various separation constraints.The approach is generalized for use in a variety of situations and allows for aircraft prioritization based on operational considerations.Besides the above three cases for modeling, scheduling can be directed towards three basic objectives (or any combination thereof): throughput, system delay and maximum delay.Throughput is linked to the capacity of the runway and for scheduling purposes can be defined as the assigned take-off or crossing time for the last aircraft being scheduled.System delay is linked to efficiency and is the total time spent by all aircraft while waiting to takeoff or cross the runway.Maximum delay is linked to equity and is the maximum waiting time for any aircraft while waiting to take-off or cross.The MILP described in this paper can address each of these three objectives as described in the next section.
III. Mathematical Details A. Basic Mathematical FormulationConsider a set of flights , which represents the aircraft expected to use the departure runway (either take-off or crossing) within the planning horizon.Let and be two subsets of , denoting arrival flights and departing flights respectively.Each member of the set will have an aircraft type and destination departure fix, which would govern the separation from preceding and succeeding aircraft.Each member of will have an aircraft type and the assigned crossing.Further, each aircraft in will have a time of earliest runway usage based on when it enters the queuing area (un-impeded, or assuming no other aircraft is present) or is available to cross.Let this time be for flight , and let the set be sorted in ascending order of .In other words, if then implies .Each aircraft may have a window of runway usage, and let us denote this with .This time window could be strict (that the aircraft has to depart before ) in which case smaller values of could lead to infeasibility, or the window could be lenient, with a penalty for violation.In the formulation presented here the time window is modeled as a strict constraint.With the small modification, this formulation can be changed to accommodate lenient, penalized time-windows too.These windows can be used as a means to prioritize some aircraft.Of course, prioritization is optional and the windows could be sufficiently large to avoid any prioritization.Let denote the set of positions these aircraft can occupy in the "usage sequence" from the runway.Thus, , or the number of such positions in the output sequence are equal to the input number of aircraft.The rest of this section describes the notation, summarizing the above set of parameters and describing the variables.This is followed by the complete mathematical formulation of the MILP and an explanation of all the expressions.
Parametersis the set of all incoming flights, sorted in ascending order of earliest un-impeded time at runway is the set of all arrival flights, is the set of all departure flights, is the set of positions that flights can take in the departure sequence on the runway, is the set of all departure queues that the departure aircraft can be assigned to is the set of all crossings for the runway, and each arrival flight is on one of these crossings Note that is the minimum separation between the two departure aircraft considering all the separation criteria including wake-vortex separation, miles-in-trail restriction etc.Further, depending on the assigned crossing, there could be additional delay .Incorporating all these cases, the parameter is defined as below:(1)
Variables(10)(11)(12)As stated before, each departure aircraft is assigned to a departure queue and then assigned a departure time.The time assignment is done by first assigning each aircraft a position in the output departure sequence (if it is a departure aircraft), and then maintaining the separation between consecutive positions.The expressions (2) to (11) can be interpreted as follows:Eq. ( 2), ( 3) and (4) are the three objective functions labeled according to the pertinent objective.Eq. (2) is the system delay objective, and minimizes the total time spent by each aircraft in departure queue (or crossing for arrivals) beyond the earliest, unimpeded runway usage time.Eq. ( 3) is the throughput objective that minimizes the take-off time of the last position, .Eq. ( 4) is the maximum delay objective, which minimizes the maximum time spent by any aircraft in the queue area.Constraint (5) mandates that each aircraft will occupy just one position in the output sequence.Constraint ( 6) is similar to (5), and represents the fact that each position in the output sequence must be occupied by just one aircraft.Constraint (7) ensures that each departure aircraft can occupy just one departure queue.Constraints ( 8) and ( 9) ensure that if aircraft is assigned to position , then the runway usage time for position is within the time window of aircraft .Constraint (10) ensures that the runway usage times for any two positions are sufficiently spaced out to ensure the separation criteria flights assigned to the positions.If flight is assigned to position and flight is assigned to position , then , otherwise the constraint is "inactive," or dominated by the constraint for the pair of aircraft that are assigned to these positions.Constraint (11) ensures the FIFO structure of each departure queue.The two terms on the left hand side of the inequality give the difference in the position of aircraft and .If both the aircraft are assigned to the same queue , then the difference in the positions should be at least one, with occupying a position later than since entered the queue later than .Similarly, constraint (12) ensures the FIFO structure of the arrival crossings.To address scenarios with pre-determined departure queues, additional constraints can be included in the problem, such as for the relevant queue and departure flight.The rest of the formulation remains the same.In fact, for these scenarios, is no longer a variable but an input parameter, and thus the problem size is reduced.For scenarios with no FIFO queues, essentially there is no departure queuing structure.This can be modeled by eliminating the queuing variables and related constraints ( 7) and ( 11) from the formulation.The reduced problem will have fewer variables and constraints, and depending on the problem characteristics, it is possible that the reduced problem is computationally more efficient.As stated before, the above formulation models the time window as a strict constraint.This formulation can be changed to accommodate "soft" time-windows by defining an additional linear variable and adding constraints and .Then can be multiplied by an appropriate cost of violating time windows and added to the objective function.
B. Modifications for Computational ImprovementComputationally, the formulation presented above does not perform very well.One of the reasons for poor performance is the number of constraints presented in constraint (10).For a 25 aircraft problem, this results in almost 165,600 constraints with binary and linear variables.For this reason, constraint (10) is re-formulated as below:(13)The above constraint is an aggregated form of constraint (10), and reduces the large number of separation constraints while retaining the same bounds.For a 25 aircraft problem, this reduces the number of constraints to 6,900.This reformulation is similar to the one presented in Ref. 9. Constraint (11) can be reformulated as :(14)The above constraint states that if both departure aircraft and are assigned to the same queue and , then for any position either takes the position or greater than , or takes the position or a position less than .Since the above constraint does not include non-unitary coefficients for the binary variables, it gives better bounds than constraint (11).Similarly, constraint (12) can be reformulated as: (15)   Other constraints presented in Ref. 9 can also be used here, with varying degrees of effect.However, the constraint based on the best solution for all is not apparent because of separation being governed by crossing assignment of arrival aircraft.Generating such a "best solution" for better lower bounds is a direction for future research.
IV. Results
A. Benefits over First-Come-First-ServeThe results from the runway scheduling using the above MILP are compared with a basic first-come-first-serve (FCFS) rule to examine the benefits of the scheme.The benefits are presented for two of the three objectives listed earlier in Section III: throughput and system delay.As discussed in Ref. 9, system delay and throughput seem the primary objectives used by the controllers today and using the maximum delay objective results in large variations in system delay and throughput values.The effect of using these two objectives on maximum delay is investigated later in this section.For the purpose of comparison, randomly generated problems comprising 15 departure aircraft and 10 arrival aircraft were used.The description of the problems is given below in the next paragraph.The MILP was solved using IBM ILOG CPLEX Optimizer d , a commercially available optimization software package, and the MILP was solved for an optimality gap (% gap in lower and upper bound) of 1.0%.Again, of the three possible configurations of the departure queue area as described in Ref. 9, results are provided only for the case with FIFO queues, where the queue assignment is not pre-determined.Based on operations at DFW, three queues and four arrival crossings were used in the analysis.To generate the problems, data was collected using the Surface Operations Data Analysis and Adaptation (SODAA) tool e .This tool analyzes the Surface Management System 11 (SMS) generated log files, which contain data from multiple sources, including air carriers, the Enhanced Traffic Management System (ETMS), and Airport Surface Detection Equipment, Model X (ASDE-X).Four aircraft weight classes were used for which FAA mandates minimum separation criteria based on wake vortex separation 12 .This separation is given in terms of distance, and was converted into time-based separation using average runway occupancy times and average horizontal and ascent speed for each aircraft weight class based on actual surface data at DFW airport.The resulting time-based separation matrix is given in Table 1.Note that the values for arrival aircraft are dependent on the assigned crossing, as discussed before in equation (1).Thus, the values need to be augmented with .It was assumed that for the crossing closest to the departure queue, and and seconds the remaining three crossings, with the value increasing with increasing distance from the departure queue.For two successive arrival aircraft from the same crossing, a required separation of 40 seconds was added.This is due to the practice of controllers providing sufficient spacing between crossings from the same queue to avoid arrivals getting stuck on the runway due to congested taxiways immediately after crossing.The earliest runway usage times were uniformly distributed, and the aircraft type is randomly assigned using a uniform distribution (resulting in approximately 25% aircraft of each weight class).Also, the values were set to infinity to allow for maximum re-sequencing.Setting a lower value would be equivalent to providing upper bounds to the maximum delay objective since is the maximum allowed delay for flight .Figure 2 shows the improvement in objectives over FCFS for 50 randomized problem sets with uniform aircraft mix (i.e., 25% each of small, large, heavy and B-757).The different lines in the figure represent the percentage improvement over FCFS for the two objectives.Both the percentage gains and the absolute benefit of all cases for both objectives are presented.The gains in throughput are relatively small as compared to the potential reduction in system delay (average throughput improvement is approximately 9%, whereas average system delay reduction is approximately 50%).However, the potential benefits in Figure 2 are for a uniformly distributed aircraft mix (i.e., approximately 25% of each of the four classes defined in Table 1).Although it can be argued that the potential aircraft mix in the future would change, benefits on current aircraft mix should also be explored.For this purpose, the data analysis from SODAA was used to determine an approximate mix of aircraft at DFW: 2% small, 88% large, 5% heavy and 5% B-757.In Figure 3, the potential benefits for the current aircraft mix are provided.Again, these results are for 50 problems of 25 aircraft with 15 departures and 10 arrivals.The observed gains in throughput (average improvement of approximately 7%) as well as system delay (average improvement of approximately 44%) were slightly less than those in uniform aircraft mix.Again, the gains in system delay were significantly more than throughput.
B. Objective ComparisonIn the previous section, potential benefits from scheduling directed towards an objective in isolation were presented.However, it is necessary to understand the relative effect of using one objective on the other metrics.Scheduling using just one metric as objective can have adverse effects on other metrics.For example, if scheduling is done based on the maximizing throughput, the optimal solution could result in five aircraft being made to wait to let another aircraft take-off first for slightly better throughput, resulting in large delays and reduced efficiency.In this section, the relative merit of choosing system delay versus throughput is first compared, and then the choice of maximum delay as an objective is discussed.These comparisons are done for both uniform and current aircraft mix.The 100 problem sets (50 for uniform mix and 50 for current mix) were used, and Figure 4 shows the result of this comparison.Each dot on the figure represents one problem set.The horizontal axis represents the percentage deviation from optimal throughput while minimizing system delay and the vertical axis represents the percentage deviation from least system delay while optimizing throughput.The figures show very small deviation in throughput when system delay is optimized (at most around 6%), but a very large deviation in system delay for optimal throughput.This indicates that multiple throughput-optimal solutions are present, or multiple throughput maximizing solutions exist in the close vicinity of the optimal solution.Searching for the least system delay solution in this neighborhood or using system delay as the objective itself might be more relevant from the point of view of future implementation.Ref. 9 shows that system delay is more sensitive to the choice of objective function (a statement strengthened by Figure 4).Results from using maximum delay as the objective function showed large deviations even for the formulation presented here.Maximum delay becomes important for equity reasons: throughput or system delay improvements at the cost of significant delays to certain aircraft might not be an acceptable solution.To see the effect of using throughput and system delay (as objective functions) on maximum delay, we compared the maximum delay from the optimal solutions for these objectives with the maximum delay from the FCFS solution.It can be argued that the FCFS solution would provide an "upper bound" to the delay of each aircraft, with no aircraft experiencing more delay than what it would face in the FCFS solution.Figure 5 and Figure 6 show these comparisons for uniform mix and current mix respectively.The figures show large variation in maximum delay between system delay or throughput optimal solution and the FCFS solution.To conclude, even though system delay yields an almost optimal solution for throughput, using it as an objective in isolation may not result in acceptable solutions.One possible method would be to use system delay as the objective with the FCFS maximum delay for each flight being used as a constraint through .
C. Computational PerformanceThe above formulation does not perform very well computationally, even while using the improvements presented in section III.The average solution time for each run above was more than 30 minutes.One of the reasons for the long computation time was the lack of good lower bounds on , demonstrated by the fact that the solution at the end of 2 minutes computation time was almost always the optimal solution.Enhancing the computational performance of the above method is a direction for future research.
V. ConclusionsThis paper presented a mixed integer linear program for deterministic runway usage scheduling.The model is generic and can be used for a variety of cases with different methods of handling the queuing area.The MILP explicitly considers separation criteria along with additional constraints and includes an optional prioritization scheme for relevant aircraft.Multiple objectives can be used and simulations indicate substantial benefits over a basic first-come-first-serve rule.Results show the largest benefits in reducing system delay, with system delay being the more sensitive objective compared to throughput.Minimizing system delay alone also provides benefits in throughput.Computational improvements to the basic MILP are also provided; however, in almost all cases the large solution times are due to poor bounds, i.e. the optimal solution was found fairly quickly and a lot of time was spent in proving optimality for this solution by changing the lower bounds.Since the model solves the deterministic problem, the logical next step is to address uncertainty in the earliest runway usage time while solving for larger time periods.One way to do this would be to use rolling planning horizon methods, and the use of the above model in such a scheme needs to be studied.Further, improvement in computational times is ongoing research, to make the model more relevant for implementation in a decision support tool for controllers.Figure 1 :1Figure 1: Example departure queue structure and arrival crossings for runway 17R at DFW
Close-up of runway crossings
is the earliest runway usage time for flight is the time window of runway usage for flight is the additional waiting time before arrival flight crosses due to the usage of crossing , is a binary parameter, and is 1 if is the crossing for arrival flight , zero otherwise is the minimum separation in runway usage times of flight and , if flight follows flight on the runway.This depends on a variety of factors, as described below.The parameter defines the required separation between the two aircraft, and depends on whether the aircraft are arrivals or departures, and in the case of arrivals, the assigned arrival crossing.Let be the required separation in runway usage times of departure flights and , if flight follows flight on the runway.be the required separation in runway usage times of departure flight and arrival flight , if flight follows flight on the runway be the required separation in runway usage times of arrival flight and departure flight , if flight follows flight on the runway be the required separation between two arrival flights when both are assigned to crossing ,
Figure 2 .Figure 3 .23Figure 2. System delay and throughput improvement over FCFS for uniform aircraft mix
Figure 4 .4Figure 4. Comparing system delay and throughput objectives
Figure 5 .Figure 6 .56Figure 5. Comparing max delay in FCFS solution with optimal system delay and optimal throughput solution for uniform aircraft mix
Table 1 : Aircraft Types and Minimum Departure Separation (in seconds) Leading Aircraft Type1SmallLargeHeavyB-757CrossingSmall598810911025TrailingLarge59611099125Aircraft TypeHeavy5961909125B 75759611099125Crossing40404040
			d http://www.cplex.come http://www.mosaicatm.com/Projects/SurfaceOperationsDataAnalysisandAdaptation/
		
		
			

				


	
		A Dynamic Programming Approach for Sequencing Groups of Identical Jobs
		
			HarilaosNPsaraftis
		
		10.1287/opre.28.6.1347
	
	
		Operations Research
		Operations Research
		0030-364X
		1526-5463
		
			28
			6
			
			1980
			Institute for Operations Research and the Management Sciences (INFORMS)
		
	
	Psaraftis, H. N. "A Dynamic Programming Approach for Sequencing Groups of Identical Jobs," Operations Research Vol. 28, No. 6, 1980, pp. 1347-1359



	
		System Aspects and Optimization Models In ATC Planning
		
			LucioBianco
		
		
			MaurizioBielli
		
		10.1007/978-3-642-84980-0_3
	
	
		Large Scale Computation and Information Processing in Air Traffic Control
		Berlin
		
			Springer Berlin Heidelberg
			1993
			
		
	
	Bianco, L., and Bielli, M. "System aspects and optimization models in ATC planning," Large Scale Computation and Information Processing in Air Traffic Control Springer-Verlag, Berlin, 1993, pp. 47-99.



	
		Scheduling tasks with sequence-dependent processing times
		
			LucioBianco
		
		
			SalvatoreRicciardelli
		
		
			GiovanniRinaldi
		
		
			AntonioSassano
		
		10.1002/1520-6750(198804)35:2<177::aid-nav3220350203>3.0.co;2-v
	
	
		Naval Research Logistics
		Naval Research Logistics
		0894-069X
		1520-6750
		
			35
			2
			
			1988
			Wiley
		
	
	Bianco, L., Ricciardelli, S., Rinaldi, G., and Sassano, A. "Scheduling tasks with sequence-dependent processing times," Naval Research Logistics Vol. 35, No. 2, 1988, pp. 177-184



	
		A Combinatorial Optimization Approach to Aircraft Sequencing Problem
		
			LBianco
		
		
			GRinaldi
		
		
			ASassano
		
		10.1007/978-3-642-86726-2_20
	
	
		Flow Control of Congested Networks
		Berlin
		
			Springer Berlin Heidelberg
			1987
			38
			
		
	
	Bianco, L., Rinaldi, G., and Sassano, A. "A combinatorial optimization approach to aircraft sequencing problem," Flow Control of Congested Networks. Vol. 38, Springer-Verlag, Berlin, 1987, pp. 323-339.



	
		The dynamic scheduling of aircraft in high density terminal areas
		
			RogerGDear
		
		
			YosefSSherif
		
		10.1016/0026-2714(89)90171-6
	
	
		Microelectronics Reliability
		Microelectronics Reliability
		0026-2714
		
			29
			5
			
			1989
			Elsevier BV
		
	
	Dear, R. G., and Sherif, Y. S. "Dynamic scheduling of aircraft in high density terminal areas," Microelectronics Reliability Vol. 29, No. 5, 1989, pp. 743-749



	
		Scheduling Aircraft Landings Under Constrained Position Shifting
		
			HamsaBalakrishnan
		
		
			BalaChandran
		
		10.2514/6.2006-6320
	
	
		AIAA Guidance, Navigation, and Control Conference and Exhibit
		Keystone, CO, United states
		
			American Institute of Aeronautics and Astronautics
			2006
			4
			
		
	
	Balakrishnan, H., and Chandran, B. "Scheduling Aircraft Landings under constrained position shifting," AIAA Guidance, Navigation, and Control Conference. Vol. 4, American Institute of Aeronautics and Astronautics Inc., Keystone, CO, United states, 2006, pp. 2175-2197.



	
		Efficient and Equitable Departure Scheduling in Real-time: New Approaches to Old Problems
		
			HBalakrishnan
		
		
			BChandran
		
		
			2007
			Barcelona, Spain
		
		
			USA -Europe Air Traffic Management Research and Development Seminar
		
	
	Balakrishnan, H., and Chandran, B. "Efficient and Equitable Departure Scheduling in Real-time: New Approaches to Old Problems," 7th USA -Europe Air Traffic Management Research and Development Seminar. Barcelona, Spain, 2007.



	
		A Generalized Dynamic Programming Approach for a Departure Scheduling Problem
		
			SivakumarRathinam
		
		
			ZacharyWood
		
		
			BanavarSridhar
		
		
			YoonJung
		
		10.2514/6.2009-6250
	
	
		AIAA Guidance, Navigation, and Control Conference
		Chicago, Illinois
		
			American Institute of Aeronautics and Astronautics
			2009
		
	
	Rathinam, S., Wood, Z., Sridhar, B., and Jung, Y. C. "A Generalized Dynamic Programming Approach for a Departure Scheduling Problem," AIAA Guidance, Navigation, and Control Conference. Chicago, Illinois, 2009.



	
		A Mixed Integer Linear Program for Airport Departure Scheduling
		
			GautamGupta
		
		
			WaqarMalik
		
		
			YoonJung
		
		10.2514/6.2009-6933
	
	
		9th AIAA Aviation Technology, Integration, and Operations Conference (ATIO)
		Hilton Head, South Carolina
		
			American Institute of Aeronautics and Astronautics
			2009
		
	
	Gupta, G., Malik, W., and Jung, Y. C. "A Mixed Integer Linear Program for Airport Departure Scheduling," 9th AIAA Aviation Technology, Integration, and Operations Conference (ATIO). AIAA, Hilton Head, South Carolina, 2009. 10



	
		Microscopic Analysis of Airport Surface Sequencing (ALTERNATE PAPER)
		
			ChrisBrinton
		
		
			BryanWood
		
		
			ShawnEngelland
		
		10.2514/6.2008-8961
	
	
		The 26th Congress of ICAS and 8th AIAA ATIO
		Anchorage, Alaska
		
			American Institute of Aeronautics and Astronautics
			2008. May, 2004
		
	
	11 Raytheon
	Brinton, C., Wood, B., and Engelland, S. "Microscopic Analysis of Airport Surface Sequencing," The 26th Congress of ICAS and 8th AIAA ATIO. Anchorage, Alaska, 2008. 11 Raytheon. "CTO-05 Surface Management System, CTOD 24 Final Report." May, 2004.



	
		Federal Aviation Authority (FAA) unveils new airline inspection program
		
			Faa
		
		10.1108/dpm.1999.07308bab.004
	
	
		Disaster Prevention and Management: An International Journal
		0965-3562
		
			8
			2
			2010
			Emerald
		
	
	FAA. "Aeronautical Information Manual (AIM): Official guide to basic flight information and ATC procedures." Federal Aviation Authority (FAA), 2010.


				
			
		
	
