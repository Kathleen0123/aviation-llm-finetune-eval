
	
	
		
IntroductionLarge-scale integer programs arise in several contexts, including transportation scheduling.Solving even the linear programming (LP) relaxation of these problems may be computationally expensive and require decomposition to solve in reasonable time, but such approaches have few guarantees with respect to integrality.In particular Dantzig-Wolfe (DW) decomposition benefits from both improved memory utilization and inherent parallelization for linear programs of the correct form, but the optimal solution found is not necessarily basic.An optimal, basic solution is important for integer programs whose formulation is such that basic solutions imply integer solutions.When that is the case, a basic solution would obviate the need for any further integer optimization.In Goncalves (1968), it was shown that a basic feasible solution found by DW can be trivially mapped to a basic feasible solution of the original problem if it satisfies certain properties related to its basic variables and the degeneracy of the subproblems.Here we show that affine independence of the columns is sufficient to satisfy this criterion, and that Binary Integer Programs (BIP) can always be decomposed to satisfy this.Others have studied how to find basic solutions from interior optimal solutions in Megiddo (1991) and Bixby and Saltzman (1994), but to our knowledge this is the first application of its kind to DW decomposition.One application of DW decomposition to integer programming is Vanderbeck (2010), which integrates a branching scheme based on a pricing oracle in order to find integer solutions, in contrast to our approach which looks to identify when DW can find integer solutions directly.A more general application of column generation for integer programming is provided by Barnhart et al (1998).A formulation of the Traffic Flow Management Problem in air traffic control provided by Bertsimas and Patterson (1998) is such an example of a stronglyformulated model that benefits from the results presented here.In fact, the strong performance with respect to both solution quality and run time of the application of DW decomposition to this problem was highlighted in Rios and Ross (2010), which motivated the result presented here.
Dantzig-Wolfe DecompositionDW decomposition is a method for solving LPs of block-angular form:Minimize c 1 x 1 + c 2 x 2 + . . . + c l x l (1) subject to D 1 x 1 + D 2 x 2 + . . . + D l x l = b 0(2)F i x i = b i , x i ≥ 0, i ∈ {1, 2, ..., l}(3)where the x, b, and c vectors are of appropriate dimension.Constraints (2) are called connecting constraints since they involve variables from the independent sets given by (3).Denoting P i to be the solutions to (3), having extreme points {x j i } j∈Ji , each feasible x i in P i can be represented as a convex combination of {x j i } j∈Ji .By substitution we can then rewrite the above LP as the full master program:Minimize l i=1 j∈Ji λ j i c i x j i subject to l i=1 j∈Ji λ j i D i x j i = b 0 j∈Ji λ j i = 1, λ j i ≥ 0, i ∈ {1, 2, ..., l}where {λ j i } j∈Ji,i∈ [1,...,l] are now the decision variables.Since the vast majority of λ j i variables are valued zero at any given iteration, most columns Dx j i are irrelevant to the master, which motivates column generation.For each i, an independent LP is created, known as a subproblem:Minimize (c i -q D i )x i subject to F i x i = b i , x i ≥ 0where q is the dual variable vector associated with the connecting constraints, made available from the master problem.The master problem, in essence, asks the subproblem for a variable (column) that will improve the master's objective function.The subproblem provides a variable x i with negative reduced cost whenever that is possible.The master iterates over all subproblems until its objective can no longer be improved, implying an optimal solution has been found.A full description of DW can be found in Dantzig and Wolfe (1960) and Bertsimas and Tsitsiklis (1997), with computational issues highlighted in Ho (1987); Ho and Loute (1981) and Tebboth (2001).
Mapping Basic Feasible SolutionsWhen an optimal solution to the original LP exists, DW will always converge to an optimal solution (as shown by Dantzig and Wolfe (1960)), but it may not be a basic feasible solution to the original problem.The only criterion of which we are aware that relates the basic feasible solutions of the master and original problems was presented by Goncalves (1968), a result which has not been frequently utilized.We state this criterion here with more commonly accepted notation.Let T be a solution to the full master problem with N non-zero λ j i values.For each subproblem i, define P 0 i = j∈Ji λ j i x j i to be the component of T that corresponds to a feasible solution of subproblem i.Let F di i be the face of smallest dimension (d i ) that contains P 0 i in the respective problem's feasible space.Define the degree of degeneracy of a basic solution β to be the number of zero-valued basic variables representing that solution, denoted D(β).A basic feasible solution to the full master program with l subproblems maps to a basic feasible solution of the original program if and only if:D(T ) + N -l + l i=1 D(F di i ) - l i=1 d i ≥ 0.(4)This was discovered and proven by Goncalves (1968).We will refer to this inequality as the Goncalves Criterion.Assuming that all variables from the original problem are present in exactly one subproblem (always enforceable), then D(T ) + N -l is the number of connecting constraints in the master problem and D(T ) + N is the number of basic variables at any iteration of the DW algorithm.A full description is found in Goncalves (1968), and the correspondence between Appa (1969) and Goncalves (1969) corrects a small error and argues the theoretical utility of this result.
An Example of the Goncalves CriterionThe intuition behind the Goncalves Criterion is potentially muddled by the necessary notation.For that reason, we provide an example exercising many aspects of it using a trivial linear program.Consider the following LP:Minimize -x 1 -x 2 (5) subject to x 1 + x 2 = 1 (6) x 1 ≤ 1 (7) x 2 ≤ 1 (8) x i ≥ 0 ∀ i ∈ {1, 2}.Note that the optimal objective value is -1 and is achieved by an infinite number of solutions satisfying constraints 6-8.We will examine two paths the DW algorithm might take through a decomposition of this problem and show their respective relationships to the Goncalves Criterion.First, consider a single subproblem for DW decomposition created by using both constraints 7 and 8.The feasible region of that subproblem would be the unit square in the positive quadrant.The key matrices (using the notation from Section 2) are D 1 = 1 1 and F 1 = 1 0 0 1 .Given this F 1 , the four corresponding x j i values can be labeled as follows:x 1 1 = (0, 0)x 2 1 = (0, 1)x 3 1 = (1, 0)x 4 1 = (1, 1).Assume that through a "Phase 1" procedure, the first two solutions provided to the reduced master problem to form a basis are x 1 and x 4 (we need two since there are two constraints in the reduced master: one for the connecting constraint and one of the subproblem convexity constraint).Forming the products x 1 1 and x 4 1 with D 1 provides the single-valued columns (recall because we only have one connecting constraint 6) D 1 x 1 1 = 0 and D 1 x 4 1 = 2, respectively.The reduced master will assign weights for λ 1 1 and λ 4 1 of 0.5 and 0.5, respectively, to obtain an optimal solution (i.e., (x 1 , x 2 ) = (0.5, 0.5)).Given all of these values, we can calculate the various GC parameters:D(T ) = 0 (reduced master solution is non-degenerate) N = 2 (number of non-zero columns in reduced master) l = 1 (number of subproblems) d 1 = 2 (solution maps to center of F 1 , a 2-D space) D(F d1 1 ) = 0 (no constraints in F 1 are at equality).Now checking the GC with these parameters we see thatD(T ) + N -l + l i=1 D(F di i ) - l i=1 d i = 0 + 2 -1 + 0 -2 ≥ 0and, therefore, this solution does not map to a basic solution of the original problem.Note that this is despite the fact that the solution is optimal in the original problem.This is also an example of how DW can converge to non-basic (though optimal) solutions of the original problem and might complicate integer optimization problems.For instance, if we added an integrality constraint to x 1 we would still have work to do if provided this solution from DW.Now consider the same decomposition as described above, however for an initial basis was are provided with x 1 and x 2 .The columns (λ 1 1 and λ 2 1 ) of the reduced master will then be D 1 x 1 1 = 0 and D 1 x 2 1 = 1, respectively.That will force values of λ 1 1 = 0 and λ 2 1 = 1 for and x value of (0, 1), which is an optimal solution to the original problem.We can again calculate the GC parameters: D(T ) = 1 (reduced master is degenerate: one zero-valued basic variable) N = 1 (number of non-zero columns in reduced master) l = 1 (number of subproblems)d 1 = 0 (solution maps to a corner point (a 0-D space) of F 1 ) D(F d1 1 ) = 1 (one constraint in F 1 is at equality).Again checking the GC with these new parameters we seeD(T ) + N -l + l i=1 D(F di i ) - l i=1 d i = 1 + 1 -1 + 1 -0 ≥ 0and, therefore, this solution maps to a basic solution of the original problem.This is easily seen since this solution in the original problem maps to a corner point of its feasible space.
Guaranteeing Satisfaction of the Goncalves CriterionWe now state the main results of this paper, which build upon the Goncalves Criterion.Theorem 1 Any decomposition of a linear program in block-angular form such that each subproblem has affinely independent corner points will satisfy the Goncalves Criterion at every iteration of the Dantzig-Wolfe decomposition algorithm.Proof Let N i represent the number of non-zero λ j i in T that correspond to columns from subproblem i.Since the corner points of each P i are affinely independent, P 0 i = j∈Ji λ j i x j i must be found on a face of dimension d i = N i -1 (see discussion of affine frames in Gallier (1999), for example).Since D(T ) and D(F di i ) will always be non-negative by definition,D(T ) + N -l + l i=1 D(F di i ) - l i=1 d i ≥ l i=1 (N i -1 -d i ) = 0and the Goncalves Criterion is satisfied.Theorem 2 The linear relaxation of any Binary Integer Program (BIP) can be decomposed into subproblems with affinely independent corner points.Proof The linear relaxation of any BIP includes the constraints 0 ≤ x i ≤ 1. Therefore one (trivial) decomposition is constructed by placing all constraints into the set of connecting constraints except for the 0 ≤ x i ≤ 1 constraints.By placing exactly one of these into each separate subproblem, the conditions of Theorem 1 are satisfied since the only feasible corner points to any subproblem are x i ∈ {0, 1}, which are affinely independent.Through Theorems 1 and 2 it is clear that there is at least a trivial decomposition to any BIP that will allow for satisfaction of the Goncalves Criterion at every DW iteration.Of course by itself this is not particularly helpful, as the full decomposition is equivalent to solving the problem without any decomposition at all.However, we also observe the following:Observation 1 If a problem is formulated for DW decomposition and any one of the subproblems is further subdivided into two or more subproblems, then the left-hand side of Inequality (4) will often increase, and almost never decrease.This is true because the combination of the first three terms of Inequality (4), D(T ) + N -l, gives the number of connecting constraints, which is nondecreasing as further subdivisions are completed.Each subdivision requires some constraints which were previously in a single subproblem to be moved into the connecting constraints, which increases this value.It cannot be strictly guaranteed that the remaining terms are nondecreasing, but the tighter constraints of each subproblem coupled with their decreased dimensionality generally lead to lower values for d i .Combining Theorems 1 and 2 with Observation 1, the following method will guarantee to eventually find an optimal basic feasible solution of any BIP, and often find it without needing to trivially decompose the problem.1. Decompose the LP relaxation using DW decomposition and solve.2. If the DW solution is basic in the original problem, then STOP. 3. Otherwise, select a subproblem with non-basic P 0 i , subdivide that problem further, and repeat.Because of Theorem 2, this will eventually find a basic solution for a BIP.If the problem is totally unimodular, then this will also be an integer solution.This was observed in particular for the air traffic scheduling problem described next which, while not totally unimodular, is known to have mostly integer basic feasible solutions (see Bertsimas and Patterson (1998)).In Rios and Ross (2010) it was seen that the procedure described above did in practice find an optimal solution without needing to fully decompose the problem.This resulted in a superior solution quality and run-time compared to any other known method of solution.
An Example from Air Traffic ManagementWe now provide an example from a transportation sub-domain, but we will re-iterate that the application of DW using the insights described in Section 5 will apply to other applications just as well.This is especially true for models like the one we are about to present that have binary decision variables and are strongly formulated such that most corner points are integer-valued.These properties help leverage the results of Theorems 1 and 2.The key criteria In Air Traffic Management, the demand and capacity balance of airports and en route airspace must be carefully managed.Bertsimas and Patterson (1998) introduced the following BIP to describe the core scheduling problem:Minimize f (c g f -c a f ) t,k=P (f,1) t(w k f,t -w k f,t-1 ) + c a f t,k=P (f,last) t(w k f,t -w k f,t-1 ) + (c a f -c g f )d f -c a f r f(9)subject tof :P (f,1)=k (w k f,t -w k f,t-1 ) ≤ D k (t), ∀ k ∈ Airports, t ∈ Time (10) f :P (f,last)=k (w k f,t -w k f,t-1 ) ≤ A k (t), ∀ k ∈ Airports, t ∈ Time (11) f :P (f,i)=j,P (f,i+1)=j (w j f,t -w j f,t ) ≤ S j (t), ∀ j ∈ Sectors, t ∈ Time (12) w j f,t+µ(f,j) -w j f,t ≤ 0, ∀ f ∈ F, j = P (f, i), j = P (f, i + 1)(13)w j f,t -w j f,t-1 ≥ 0, ∀ f ∈ F, j ∈ (f 's flight path) (14) w j f,t ∈ {0, 1}, ∀ f ∈ F, j ∈ (f 's flight path), t ∈ Time (15)The decision variables w j f,t are valued 1 if and only if a flight f has entered sector j by time t (14).The objective ( 9) is to minimize the weighted sum of ground and air delay costs, subject to airport departure (10), airport arrival (11), and sector capacity constraints (12).Each flight is described as an ordered list of distinct sectors and airports constrained by earliest and latest feasible time steps as well as physical and temporal limitations of the flights in ( 13) and ( 14), respectively.Real-world instances (thousands of flights, hundreds of sectors, airports, and time steps) of this model are computationally intense.Fortunately, the LP relaxation is in block diagonal form, which suggests the application of DW decomposition, first presented in Rios and Ross (2010).It is also known to have mostly integer corner points (see Bertsimas and Patterson (1998)), which makes it a good candidate for application of the approach described in this paper.It can be shown that the solutions satisfying ( 13) and ( 14) have affinely independent corner points for each flight, f .By theorem 1, this means that this particular BIP will find basic solutions through DW decomposition without needing to fully decompose the problem to the trivial case described in the proof of that theorem.Following the algorithm described in section 3 and to demonstrate the utility of the approach, the problem was decomposed into successively finer subproblems.At the end of each decomposition, a good integerization approach (described as the choose-one heuristic in Rios and Ross (2010)) was used to find the nearest integer solution to the optimal solution found through DW decomposition, with the optimality gap corresponding to the difference in objective value between the optimal and corresponding integer solutions.Figure 1 shows the results in terms of this optimality gap (on the left) and the run time (on the right).Both measures improve as the number of subproblems increases, until the optimality gap reaches zero.The maximal decomposition required was 5920 subproblems, which was the number of flights in the scenario, at which stage constraints ( 13) and ( 14) relating to an individual flight were placed into individual subproblems.Note that this is significantly less than the 654,300 variables (all binary), which shows that the trivial decomposition described in theorem 2 is not necessary to reach the optimal integer solution.This result is especially significant because it provides a method for minimizing delays in the United States national airspace which can be operated in real-time.This is in contrast to previous methods which either could not guarantee optimality or could not solve within the window of time being scheduled (e.g., a scenario with a two-hour planning horizon could take over two hours to solve).The reasons for the improvements in runtime and solution quality presented in Figure 1 are not completely obivious, but are owed to several factors.One factor includes the properties described in this paper for obtaining basic solutions through properly decomposed subproblems.Another important factor for the improved runtime is the fact that the decreasing size of the subproblems make them increasingly trivial for modern linear programming software Fig. 1 Quality and speed over an increasing numbers of subproblems.Both the optimality gap (on the left) and the runtime (on the right) improve as the problem is subdivided into more subproblems.For this air traffic example, the optimality gap goes to zero with 5920 subproblems to solve.Coupled with the availability of computer systems with multiple cores, the runtime descreases dramatically despite having to solve many more subproblems.
Discussion and ConclusionWe have presented a sufficient condition for consistently mapping basic solutions from a Dantzig-Wolfe decomposition back to basic solutions of the original linear program.By ensuring affine independence of the corner points in the subproblems, one can guarantee a direct correspondence.We have shown that any BIP can be decomposed to satisfy this condition, and computational results on a large-scale BIP indicate that integer solutions may be found even using a less refined decomposition than necessary.In fact, the computational results hint that, in practice, near affine independence will aid in ensuring a mapping exists between basic solutions in the master and original problems.When integer programs are strongly formulated, this result shows that the positive qualities of the original program in terms of integer corner points will not be lost when performing Dantzig-Wolfe decomposition when the subproblems are carefully constructed.There are several fertile directions for future research in this area.A fundamental question to which a mathematical modeler might want a clear answer is when to employ a technique as described here versus a branch-and-price approach.Assuming there is no free lunch, the answer will depend greatly on the models being used.A large-scale computational study comparing implementations of DW and branch-and-price would likely shed light on scenarios more befitting the DW approach described here over branch-and-price, and vice-versa.Another interesting extenstion to this work would be to determine what level of decomposition to apply a priori to acheive results similar to those presented in Section 6. Currently that decision would be more art than science, relying on the experience and insight of the user.		
		
			

				


	
		Dantzig-wolfe decomposition algorithm
		
			GAppa
		
	
	
		Operational Research Quarterly
		
			20
			2
			275
			1969
		
	
	Appa G (1969) Dantzig-wolfe decomposition algorithm. Operational Research Quarterly 20(2):275



	
		Branchand-price: Column generation for solving huge integer programs
		
			CBarnhart
		
		
			JohnsonElNemhauser
		
		
			GLSavelsbergh
		
		
			MwpVance
		
		
			PH
		
	
	
		Operations Research
		
			46
			3
			
			1998
		
	
	Barnhart C, Johnson EL, Nemhauser GL, Savelsbergh MWP, Vance PH (1998) Branch- and-price: Column generation for solving huge integer programs. Operations Research 46(3):316-329



	
		The air traffic flow management problem with enroute capacities
		
			DBertsimas
		
		
			SSPatterson
		
	
	
		Operations Research
		
			46
			3
			
			1998
		
	
	Bertsimas D, Patterson SS (1998) The air traffic flow management problem with enroute capacities. Operations Research 46(3):406-422



	
		
		
			DBertsimas
		
		
			JNTsitsiklis
		
	
	
		Athena Scientific
		
			1997
			Belmont, Massachusetts
		
	
	Introduction to Linear Optimization
	Bertsimas D, Tsitsiklis JN (1997) Introduction to Linear Optimization. Athena Scientific, Belmont, Massachusetts



	
		Recovering an optimal basis from and interior point solution
		
			REBixby
		
		
			MJSaltzman
		
	
	
		Operations Research Letters
		
			15
			
			1994
		
	
	Bixby RE, Saltzman MJ (1994) Recovering an optimal basis from and interior point solution. Operations Research Letters 15:169-178



	
		Decomposition principle for linear programs
		
			GBDantzig
		
		
			PWolfe
		
	
	
		Operations Research
		
			8
			1
			
			1960
		
	
	Dantzig GB, Wolfe P (1960) Decomposition principle for linear programs. Operations Re- search 8(1):101-111



	
		Basic feasible solutions and the dantzig-wolfe decomposition algorithm
		
			JHGallier
		
	
	
		Operational Research Quarterly
		
			19
			4
			
			1999. 1968
			Morgan Kaufmann Goncalves A
		
	
	Curves and Surfaces in Geometric Modeling: Theory and Algorithms
	Gallier JH (1999) Curves and Surfaces in Geometric Modeling: Theory and Algorithms. Morgan Kaufmann Goncalves A (1968) Basic feasible solutions and the dantzig-wolfe decomposition algorithm. Operational Research Quarterly 19(4):465-469



	
		Mr. goncalves replies
		
			AGoncalves
		
	
	
		Operational Research Quarterly
		
			20
			2
			276
			1969
		
	
	Goncalves A (1969) Mr. goncalves replies. Operational Research Quarterly 20(2):276



	
		Recent advances in the decompostion approach to linear programming
		
			JKHo
		
	
	
		Mathematical Programming Study
		
			31
			
			1987
		
	
	Ho JK (1987) Recent advances in the decompostion approach to linear programming. Math- ematical Programming Study 31:119-127



	
		An advanced implementation of the dantzig-wolfe decomposition algorithm for linear programming
		
			JKHo
		
		
			ELoute
		
	
	
		Mathematical Programming
		
			20
			1
			
			1981
		
	
	Ho JK, Loute E (1981) An advanced implementation of the dantzig-wolfe decomposition algorithm for linear programming. Mathematical Programming 20(1):303-326



	
		On finding primal-and dual-optimal bases
		
			NMegiddo
		
	
	
		ORSA Journal on Computing
		
			3
			1
			
			1991
		
	
	Megiddo N (1991) On finding primal-and dual-optimal bases. ORSA Journal on Computing 3(1):63-65



	
		Massively parallel dantzig-wolfe decomposition applied to traffic flow scheduling
		
			JRios
		
		
			KRoss
		
	
	
		Journal of Aerospace Computing, Information, and Communication
		
			7
			1
			
			2010
		
	
	Rios J, Ross K (2010) Massively parallel dantzig-wolfe decomposition applied to traffic flow scheduling. Journal of Aerospace Computing, Information, and Communication 7(1):32- 45



	
		A computational study of dantzig-wolfe decomposition
		
			JRTebboth
		
		
			2001
		
		
			University of Buckingham
		
	
	PhD thesis
	Tebboth JR (2001) A computational study of dantzig-wolfe decomposition. PhD thesis, University of Buckingham



	
		Branching in branch-and-price: a generic scheme
		
			FVanderbeck
		
	
	
		Mathematical Programming pp
		
			1
			46
			2010
		
	
	Vanderbeck F (2010) Branching in branch-and-price: a generic scheme. Mathematical Pro- gramming pp 1-46


				
			
		
	
