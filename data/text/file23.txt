
	
	
		
I. Introductionn recent years, new complex control methods have developed more quickly than the methods used to ensure their adherence to safety and performance requirements.Whereas many analytical methods have been used to prove that a classical controller can achieve stability, or other performance measures, at this time there are no standard
II. Problem DescriptionThe problem that this method is attempting to address is to analyze an FLC for the following dynamic system.The analysis will involve proving that the FLC adheres to specifications that it should always give positive feedback and be stable in the sense of Lyapunov.
A. Dynamic System DescriptionThe dynamic system that was analyzed in this study was a single degree-offreedom inverted pendulum.In this system, an input torque was supplied by a controller to keep the pendulum inverted throughout time.In this study, two controller types were developed and tested: a classical Proportional-Derivative (PD) controller and a non-linear Fuzzy Logic Controller (FLC).The configuration of the dynamic system setup can be seen in Figure 1.Whereas this system seems to be fairly simple in nature, the non-linear FLC controller imposed interesting characteristics not typically seen by a classical controller.Throughout simulation, the performance of the FLC was superior to the classical linear controller with respect to both rise and settling times.In each of these cases, experiments were conducted to show that the controller was able to meet the system requirements for positive feedback and Lyapunov stability.
B. Positive FeedbackThe first area of stability analysis conducted in this study was checking for positive feedback.In a dynamic system, a controller is created to provide negative feedback to the system.In essence, this means that the controller is not increasing the state error or error rate at any time.If the controller produces positive feedback, this is undesirable and will force the system to diverge from the desired set point.If positive feedback occurs, the system is not necessarily unstable, as it could push the system into a limit cycle; however, this is not a desired output of the system since it worsens performance.
C. Lyapunov StabilityThe second area of stability analysis performed was testing for Lyapunov stability.This testing criteria is achieved by selecting a candidate function that is positive semi-definite and often includes a notion of energy in the system.To check stability in the sense of Lyapunov, the time derivative of the candidate function is found.If this function can be proven to be negative-definite over all conditions of interest, the system will be asymptotically stable 2,3 .Therefore, over time the controller will force the system to converge to zero error and error rate.Similarly, if the function is negative semi-definite, the system is stable in the sense of Lyapunov and will remain in a set region around the desired position.Lastly, if the function is found to be positive for any conditions of interest, the stability of the system cannot be concluded using the candidate function chosen.For a given system, there is no guarantee that such a function that satisfies these conditions can be found, or even exists.This does not necessarily imply that the controller is unstable; this simply means that stability in the sense of Lyapunov cannot be proven.
D. SMT SolversThe properties of the controllers were tested for positive feedback and Lyapunov stability utilizing a Satisfiability Modulo Theories (SMT) solver.SMT solvers are tools that extend the ability to solve satisfiability problems to higher order logics.Satisfiability problems are problems that involve a search for variable assignments such that a formula of interest evaluates to true.When the variables have binary truth assignments, this search is known as the Boolean Satisfiability Problem.SMT solvers extend this to include First Order Logic (FOL) sentences.FOL extends propositional logic to include quantification of variables and predicates, and can include theories such as real and integer arithmetic, bitvectors, and arrays.Z3 8 is one such solver developed by Microsoft and was used throughout the scope of this work.It has the ability to solve SMT queries involving non-linear real arithmetic and was the top performing solver in competition-wide scoring for the 2016 SMT competition 11 .
III. Proposed SolutionPrior to developing the controllers for the inverted pendulum system, a model for the single degree-of-freedom inverted pendulum was developed using a Lagrangian approach.In this approach, energy methods are used to develop the equation of motion.This equation of motion was found to be:1 3 ùëöùêø 2 Œ∏ Ãà-ùëöùëî ùêø 2 sin Œ∏ = ùëá (1)where  is the acceleration due to gravity,  is the mass of the pendulum,  is the length of the pendulum, and  is the applied torque (i.e. the output from the controller).The physical parameters had values of 9.81   2 , 1 , and 1 ,
A. PD Controller DevelopmentThe first controller that was created was a linear PD controller that has the form:ùëá = ùêæ ùëù ùëí ùúÉ + ùêæ ùëë ùëíÃáùúÉ(2)where   and   are real-valued gains specified by the designer,   is the error, Ãá is the error rate, and  is the controller output.The set point used was the equilibrium point Œ∏ = 0 which gives the relationships   = - and Ãá = - Ãá.Eq. ( 1) was then linearized about Œ∏ = 0.The gains were selected using traditional tuning techniques to be:   = 113,   = 7.6.
B. Fuzzy Controller DevelopmentNext, a Mamdani-type Fuzzy Logic Controller, based on Fuzzy Set Theory introduced by Lofti Zadeh in the 1960's 9 , was developed.A Fuzzy controller uses input classification and rules associating different Fuzzy sets to produce complex and highly non-linear inputoutput relationships.Using a Fuzzy controller has many benefits including the ability to be developed by a designer that has some expert knowledge about how the system should desirably act.Fuzzy controllers are also universal approximators and can approximate any given function to an arbitrary degree of accuracy.This is useful when there is some unknown optimal control surface.Due in part to Fuzzy controllers' ability to approximate some (potentially non-linear) optimal control surface, the input-output relationship can be complicated, and their nonlinear nature precludes analysis using traditional design methods.Due to this, the authors aim to develop an approach for analyzing these inputoutput relationships.This is necessary for these types of systems to ensure they perform as expected prior to being implemented into safety-critical systems.In each Fuzzy system, the user must define a rule base to govern the action of the controller for a set of inputs.The Fuzzy system used in this study was trained using a combination of expert knowledge and Genetic Algorithms, both of which are beyond the scope of this paper.The rule base governing the FLC can be seen in
C. Conversion to Piecewise Polynomial RepresentationIn order to simplify the input-output relationship, the FLC was constrained and converted to a piecewise polynomial system using previously developed methods 10 .The constraints for the FLC are as follows: ÔÇ∑ Triangular membership functions: This constraint limits the membership function shape to be triangular.The result is a piecewise linear membership function of the input value for a particular membership function.ÔÇ∑ Fuzzy partitioning: The membership functions are partitioned such that the end points for the triangle defining a membership function coincide with the center points of neighboring membership functions.A visualization of this is shown in Figures 3 and4 where the dashed lines represent the locations of the membership function center points.The center points are defined as the input value that gives the maximum membership value of one for that particular function.ÔÇ∑ Normalization: The input and output sets were defined on a normalized range such that any input value is within positive or negative unity.Gains are used to reduce the inputs to this range and a gain is applied to the output as well.Also, if a value is outside of the universe of discourse, it is reduced to the boundary value.ÔÇ∑ Product method: For rule associations, the product method was used to scale the contributions of each active membership function based on its membership value for a given input.An active membership function is one that has a non-zero membership value for a given input value.For example, if a rule in the FLC is described by If  1 is   and  2 is   then output is  , , the product method would combine these to give  =      , .Where   and   are the membership values in the   and   membership functions and  , is the center point of the output membership function associated with   and   .ÔÇ∑ Weighted average defuzzification: In FLCs, there are usually multiple membership functions that are active for each input.This results in multiple rules that are active as well, and is referred to as the aggregate.To resolve a crisp output from this aggregate, a process called "defuzzification" is used.For example, a common method for defuzzification is the centroid method.This method takes the centroid of the aggregate to give a single, crisp output that is most representative of the components of the aggregate.The method used in this work for defuzzification was weighted average.This method is similar to centroid, although it only needs the membership values of the active membership functions along with the center points of the corresponding output membership functions, instead of the entire geometric representation of the aggregate.This reduces computational complexity and allows for easier translation to an explicit representation while still giving similar performance to the centroid method.Eq. ( 3) shows the output of a two-input, one-output FLC using this defuzzification method in combination with the product method for rule associations.ùë¶ = ‚àë ‚àë ùúá ùëñ ùúá ùëó ùëà ùëñ,ùëó ùëõ 2 ùëó=1 ùëõ 1 ùëñ=1 ‚àë ‚àë ùúá ùëñ ùúá ùëó ùëõ 2 ùëó=1 ùëõ 1 ùëñ=1 (3)Here,  is the output of the FLC, and  1 and  2 are the number of membership functions for the first and second inputs, respectively.Note that the denominator in Eq. (3) will always be unity and there will only be two active membership functions per input due to the chosen partitioning constraint.Using these constraints, the FLC could be converted into a piecewise polynomial form.Through this conversion, the input-output relationships are simplified when compared to typical FLC implementations.The input-output relationship of the FLC has the following form:ùëá = ùêæ 1 ùëí ùúÉ + ùêæ 2 ùëíÃáùúÉ + ùêæ 12 ùëí ùúÉ ùëíÃáùúÉ + ùêæ ùëê(4)where the coefficients  1 ,  2 ,  12 , and   are constant for a particular mode.The modes are defined as the regions between the center points of the input membership functions.The transitions occur such that the functions governing each mode are continuous and are inclusive on the lower boundary of the mode.The exception to this is the "upper" mode (i.e. when either input is in its "PM" and "PB" membership functions).In this mode, the domain is inclusive on both boundaries.As an example of the structure of the piecewise polynomial representation of the FLC, consider a similar FLC that only has three membership functions instead of the seven shown in Figures 3 and4.These membership functions, for both inputs, would have center points at {-1,0,1}, and the system would have four total modes.When either input crosses zero, the system would transition to a different mode that is governed by a continuous function in the form of Eq. (4).A visualization of this 4-mode system is shown in Figure 5.The structure is the same for the FLCs in this work, with the difference being that since seven membership functions are used for each input, the total number of modes is 36.
D. Formalizing Constraints into First Order LogicAfter the controllers were developed, the system equations and the constraints for each stability criteria for both controllers were formalized into FOL sentences.Using these FOL sentences, the equations need to be proven to hold over the entire bounded domain.This can be done by negating the entire statement and then proving that the statement and its constraints are unsatisfiable.As previously mentioned in the description of positive feedback requirements, the controller shall always drive the error and error rate towards zero.This expression can be formalized using the following FOL sentence:‚àÄùëí ùúÉ ‚àÄùëíÃáùúÉ ( ((ùë†ùëîùëõ(ùëí ùúÉ )ÀÑ ùë†ùëîùëõ(ùëíÃáùúÉ)) ‚Üí ùë†ùëîùëõ(ùëá)) ÀÑ ((¬¨ùë†ùëîùëõ(ùëí ùúÉ )ÀÑ¬¨ùë†ùëîùëõ(ùëíÃáùúÉ)) ‚Üí ¬¨ùë†ùëîùëõ(ùëá)))(5)where  refers to a predicate that resolves signed real variables to Boolean values.In this case,  is inclusive of zero on the positive side.This expression can be verified by examining the controller input-output equation(s).This approach was tested for both the PD and Fuzzy controllers.For the case of checking that the system is stable in the sense of Lyapunov, a candidate function was created to meet the set criteria.Our candidate function is as follows:ùëâ(ùë•ÃÖ ) = 1 2 ùë• 2 2 + ùëé(1 -cos ùë• 1 )(6)where  1 =  and  2 =  Ãá.The coefficient  had values of 334 for the PD case and 243 for the FLC case.This function meets the constraints for a candidate Lyapunov function that (ÃÖ = 0) = 0 and (ÃÖ ‚â† 0) > 0 and was created with intuition and minor testing using simulation runs.Next,  Ãá(ÃÖ ) can be found using the following expressions:ùë•Ãá1 = ùë• 2(7)ùë•Ãá2 = 3(ùëá + 4.905 sin ùë• 1 )(8)ùëâ Ãá(ùë•ÃÖ ) = [ ùúïùëâ ùúïùë• 1 ùúïùëâ ùúïùë• 2 ] [ ùë• 1 ·∫ã2 Ãá](9)By taking the partial derivatives of Eq. ( 6) and substituting into Eq.( 9), we get the following two equations for the PD and FLC cases, respectively. Ãá(ÃÖ ) = 3 2 ( + 116.238 sin  1 ) Ãá(ÃÖ ) = 3 2 ( + 85.905 sin  1 )We know that the candidate Lyapunov function,  Ãá(ÃÖ ) must be negative semi-definite.Thus, the constraint equations for testing stability in the sense of Lyapunov becomes:‚àÄùë• 1 ‚àÄùë• 2 (ùëâ Ãá(ùë•ÃÖ ) ‚â§ 0)(12)Lastly, after the constraint equations had been written in FOL, the representations of each controlled system and constraints were implemented into an SMT Solver to verify that the system always meets the specification criteria.
IV. Test Methods
A. Positive FeedbackTo verify that the linear PD controller produces negative feedback for all possible inputs, a Z3 script was developed to verify this constraint satisfaction problem.Therefore, the inputs of error and error rate first had to be declared within the Z3 architecture.This was done by utilizing the knowledge that   = - and   Ãá= - Ãá, due to the set point being  = 0.The assertions that the output torque from the controller was always in the desired direction were then described.That is, if both   and   Ãá were positive, the torque must always be positive.On the other hand, if both   and   Ãá were negative, the torque must necessarily be negative.In the cases where   is positive and   Ãá is negative and vice versa, the desired controller output is magnitude dependent.Thus, the positive feedback specification is not applicable.By setting hard constraints on the ranges of   and   Ãá for each case (i.e.strictly negative or strictly positive), the constraints on the controller output could be negated, resulting in the following expression:‚àÉùëí ùúÉ ‚àÉùëíÃáùúÉ ¬¨ ( ((ùë†ùëîùëõ(ùëí ùúÉ )ÀÑ ùë†ùëîùëõ(ùëíÃáùúÉ)) ‚Üí ùë†ùëîùëõ(ùëá)) ÀÑ ((¬¨ùë†ùëîùëõ(ùëí ùúÉ )ÀÑ¬¨ùë†ùëîùëõ(ùëíÃáùúÉ)) ‚Üí ¬¨ùë†ùëîùëõ(ùëá)))(13)Thus, if the SMT solver was used to check if the above system is satisfiable, and found it to be true, positive feedback can occur in the system.However, if it is found to be unsatisfiable, the system is guaranteed to have negative feedback for all inputs within the analyzed domain.This means that there are no possible values that violate the original requirement stated in Eq. ( 5).Therefore, it is proven to hold over the entire domain of the inputs.Similarly, the possibility of positive feedback occurring in the Fuzzy controller case was analyzed using the same approach.The only difference here is that whereas the PD case has only one mode, the Fuzzy controller has ( 1 -1)( 2 -1) possible modes that need to be analyzed, where  1 and  2 are the number of membership functions for each respective input.
B. Lyapunov StabilityFinally, both controllers were tested for Lyapunov stability.Using the equation previously defined for  Ãá(ÃÖ ) and constraining the inputs to the controller, a constraint satisfaction problem can be developed to ensure that  Ãá(ÃÖ ) is negative semi-definite.The constraints on the inputs are simply normalized bounds based on the gains found during training.To check the stability specification, it is again negated which gives the following expression:‚àÉùë• 1 ‚àÉùë• 2 ¬¨(ùëâ Ãá(ùë•ÃÖ ) ‚â§ 0) (14)By proving that the above expression is unsatisfiable, we can guarantee that the system is stable.For this case, the controller output, , was simply changed based on the type and mode of the controller.The PD controller has only one mode.However, the Fuzzy controller has 36 modes.These modes were checked along with the corresponding input bounds (defined by the membership function center points) for unsatisfiability.It should be noted that Z3 cannot handle transcendental functions and the sine functions in Eqs.(10) and (11) were approximated using the first three terms of a Maclaurin series expansion -sin() ‚âà  - .Although this approximation is not exact, the error at the bounds of  1 is acceptable as the maximum magnitude of  1 is approximately 0.1255 .The maximum error magnitude due to this approximation is 9.72 -11  and occurs at the outer boundaries of the input space.
V. Results
A. Positive FeedbackOnce each of the above cases was developed, they were analyzed using Z3.When checking for positive feedback in the linear controller, Z3 found that the model was unsatisfiable in all cases.Therefore, we have proven for the domain ranges tested we can ensure that the system will only produce negative feedback.When checking for positive feedback in the Fuzzy controller, we again found that the system was unsatisfiable in all modes analyzed.Thus, we again showed that the FLC would always produce negative feedback to the system.As a counterexample for the FLC positive feedback check, a bad rule was intentionally placed in the rule base, as seen in Figure 6.This rule now says that if the angle error and error rate are both large in the negative direction, the controller should output a positive torque.Due to the sign conventions of angle error, error rate, and torque, this means that the pendulum is far away from the set point, is moving further away, and the torque input is such that it is pushing it even further still.By creating this bad rule, Z3 was able to identify the mode that violated this specification.This was used to ensure that the problem was formulated correctly in Z3 and to check that Z3 could identify this potential hazard in the proposed Fuzzy controller.Although positive feedback is not in itself conclusive for guaranteeing safety or stability of a controller, it is easily verified using an SMT solver.This also represents a powerful tool for design.Incorporating specifications such as these during a training or optimization process will lead to more confidence in the controller performance.
B. Lyapunov StabilityPrior to evaluating both the PD and Fuzzy controllers using the Z3 formulation, a MATLAB simulation was developed to test a range of inputs for the system.The domain used in testing was the universe of discourse for each input.More formally,  = {‚Ñù| -0.1255 ‚â§  1 ‚â§ 0.1255, -1.628 ‚â§  2 ‚â§ 1.628}.In these cases, we wanted to ensure that the derivative of our candidate Lyapunov function was negative semi-definite for all points tested.Upon evaluation over a range of values for  1 and  2 , it was concluded that both the PD and Fuzzy controllers satisfied this condition.A figure showing the results of the simulated candidate function for the FLC can be seen in Figure 7.Next, the PD controller was tested for stability in the sense of the Lyapunov using Z3.When the program ran the same range of inputs that were analyzed in the MATLAB simulation, Z3 found conditions that the simulation points missed.Whereas the simulation analyzed a large number of discrete input values, it did not analyze the entire continuous range of inputs.Therefore, the simulation missed points that make  Ãá(ÃÖ ) positive (i.e.violate the system requirement for stability).Similarly, the Fuzzy implementation had the same outcome.In the MATLAB simulation,  Ãá(ÃÖ ) was negative semidefinite over the range of inputs.In addition, dynamic simulations were run over a range of initial conditions for  and  Ãá.These initial conditions were equally spaced over the domain .The time histories of both  and  Ãá for each of these runs for the FLC controlled system converge to zero, as shown in Figure 8.Additionally, a phase portrait is shown in Figure 9 for every tenth run.These results seem to indicate that the controller is stable within this region, but this method cannot be used to prove its stability within a finite amount of time.Although the simulation results are promising, when realized and tested using FOL in Z3, eight modes were found to be satisfiable.Meaning values for  and  Ãá were found that drove  Ãá(ÃÖ ) positive and violated the specification.It is important to note that this does not mean that the controlled system is unstable; it simply means that no conclusions can be drawn about the system stability using our selected candidate Lyapunov function.If a candidate function could be found that does satisfy these requirements, we could then conclude that the system is stable (i.e.asymptotically or in the sense of Lyapunov).However, the power to identify these conditions that would otherwise be missed by the simulation results provides value when making claims about a system's adherence to its requirements.Because stability needs to be a safety property (a property that holds over the entire space), one can conclusively say that it holds, or identify cases where it does not.This is invaluable in the design phase of the controller development, as it can lead the designer to be able to correct those modes.The modes that were identified as violating the specification are shown in the Fuzzy rule base in Figure 10.The different shades for the membership functions are due to the fact that each mode contains four membership functions.This is due to the partitioning constraint detailed in Section III.C.Therefore, the darker the shade, the more modes that contain that membership function have values violating the specification.In addition to the information about which mode violated the specification, the values for  and  Ãá that satisfied the negated specification are known.Although the Lyapunov candidate function was not able to say that the controller was definitively stable in these modes, it may very well be.After identifying these modes, several simulations were run within these modes to gather more evidence that the controller is in fact stable.The phase portrait of the system response within these modes is shown in Figure 11.The initial conditions for  and  Ãá were set to be 25 equally spaced values from one boundary of the domain  to the other within each mode for a total of 5,000 runs.Each simulated case ran for the same specified time as the responses shown in Figure 8.This was to show the overall stability, as opposed to ending the trace once it reached the boundary of the mode.These simulation traces similarly do not prove that the system is stable, but the simulation results do contribute to the overall body of evidence.Combined with the SMT methods mentioned, these inspire high confidence in the controller's ability to stabilize the system effectively.Although the chosen Lyapunov candidate function was not able to prove the Fuzzy controller was stable in all modes, being able to identify those inconclusive modes represents an important capability.The controller could be retrained using some sort of optimization algorithm and then reevaluated until the Lyapunov stability requirements are met.In addition, this training loop could be closed if the information about the violating modes could be utilized to guide the next optimization attempt.
VI. ConclusionUsing the approaches described in this study, we have shown that utilizing an SMT solver is a valid method for analyzing several desirable (and undesirable) characteristics of both a linear and non-linear Fuzzy Logic controller.The SMT solver offers conclusive proofs for whether a requirement holds, given that it can be properly represented in formal logic.Both controllers were proved to not produce positive feedback by showing that conditions that do give positive feedback do not exist (i.e. they are unsatisfiable).Lastly, although simulation runs provided negative semidefinite values for  Ãá(ÃÖ ) and seemed to indicate stability from time histories and phase portraits, Z3 showed conditions exist where  Ãá(ÃÖ ) is positive.Therefore, the Fuzzy controller cannot be proven stable using this candidate function.An important caveat is that this method can be very conservative, and the controller may very well be stable while not being able to satisfy the Lyapunov criteria for candidate functions that are selected.This represents the main difficulty with this method as selecting a candidate function is not trivial.Also, when determining performance and stability for dynamic systems, simulation runs do contribute towards the overall body of evidence that the system will perform as expected.The simulation runs that were performed indicate that it is likely that the controller is indeed stable within the boundaries evaluated.Overall, these techniques can aid with the design phase for FLCs of this type, since unstable modes can be identified and corrected using optimization protocols.There are several opportunities for extending this work.One of which is exploring different methods of candidate function selection.Although the results are inconclusive for proving Lyapunov stability given the prescribed candidate function, another method could be used to potentially find parameters for the candidate function that prove stability.In systems where certain unknown parameters affect the truth evaluation of a constraint satisfaction problem, it is sometimes possible to perform parameter synthesis to find satisfying assignments.Consider a candidate Lyapunov function of the following form: (ÃÖ ) =  1 (1 -cos  1 ) + 1 2  2  2 2(15)The coefficients  1 and  2 are unknown but could potentially be found by searching with SMT.This could be done by converting this into an exists-forall formula.These formulas have the form ‚àÉ. ‚àÄ.(, ), meaning that there exists some values for  that satisfy  for all values of .This can then be rewritten as ‚àÄ.(, ) with constraints on  in order to remove the existential quantifiers and search for satisfying values.The main issue with this approach is the computational expense of doing so.Others have done this for controllers with few modes, but it is difficult to find parameters that globally satisfy the Lyapunov criteria for all of the modes in a given FLC.Finding separate parameter values within each mode could also be accomplished, but could lead to a weaker stability proof.At this time, some of these techniques have been explored, but have yielded inconclusive results.Being able to find these parameters would be powerful, as they could then be used to conclusively prove stability for the FLC.Figure 1 .1Figure 1.Single degree-offreedom inverted pendulum
Figure 2 .2In this figure, the linguistic terms of each entry and their respective abbreviation are as follows: negative big [NB], negative medium [NM], negative small [NS], zero [ZE], positive small [PS], positive medium [PM], and positive big [PB].The inputs are the pendulum angle error,   [e], and the angle error rate, Ãá [de/dt].The membership functions for the input sets are shown in Figures 3 and 4.
Figure 2 .Figure 3 .Figure 4 .234Figure 2. FLC rule base de/dt NB NM NS ZE PS PM PB NB NB NB NB NM NM NS ZE NM NB NB NM NM NS ZE PS NS NB NM NM NS ZE PS PM ZE NM NM NS ZE PS PM PM PS NM NS ZE PS PM PM PB PM NS ZE PS PM PM PB PB PB ZE PS PM PM PB PB PB e
Figure 5 .5Figure 5. Piecewise polynomial representation of 4-mode FLC with continuous modes and discrete transitions
Figure 6 .Figure 7 .67Figure 6.FLC rule base with bad (highlighted) rule de/dt NB NM NS ZE PS PM PB NB PB NB NB NM NM NS ZE NM NB NB NM NM NS ZE PS NS NB NM NM NS ZE PS PM ZE NM NM NS ZE PS PM PM PS NM NS ZE PS PM PM PB PM NS ZE PS PM PM PB PB PB ZE PS PM PM PB PB PB e
Figure 8 .Figure 10 .810Figure 8.Time histories for  (left) and  Ãá (right) over range of initial values for FLC controlled system
Figure 11 .11Figure 11.Phase portrait for 5,000 simulation runs within modes that violated Lyapunov specification
			Downloaded by NASA AMES RESEARCH CENTER on January 9, 2017 | http://arc.aiaa.org| DOI: 10.2514/6.2017-1773
		
		

			
AcknowledgmentsT. Arnett thanks Matthew Clark, Dr. Kuldip Rattan, and Jon Hoffmann of AFRL for their help and previous work in the area.T. Arnett and B. Cook also thank Dr. Kelly Cohen for his invaluable advice and support.This work was partially supported by the Dayton Area Graduate Studies Institute.
			

			

				


	
		Design and analysis of a multistage Fuzzy PID controller
		
			KSRattan
		
		
			MAClark
		
		
			JAHoffman
		
	
	
		American Control Conference (ACC)
		Chicago, IL
		
			2015. 2015
			
		
	
	K. S. Rattan, M. A. Clark and J. A. Hoffman, "Design and analysis of a multistage Fuzzy PID controller," American Control Conference (ACC), 2015, Chicago, IL, 2015, pp. 5726-5731.



	
		The general problem of the stability of motion
		
			AMLyapunov
		
	
	
		International Journal of Control
		
			55
			3
			
			1992
		
	
	Lyapunov, A.M., The general problem of the stability of motion. International Journal of Control, 55(3), pp.531-534, 1992.



	
		Dynamic Systems Recitation 6
		
			MDahleh
		
		
			2003
			Cambridge, MA
		
		
			Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology
		
	
	Lyapunov Methods. unpublished
	Dahleh, M., "Lyapunov Methods," Dynamic Systems Recitation 6, Department of Electrical Engineering and Computer Science, Massachusetts Institute of Technology, Cambridge, MA, 2003 (unpublished).



	
		Stability analysis of discrete-time fuzzy dynamic systems based on piecewise Lyapunov functions
		
			GFeng
		
	
	
		IEEE Transactions on Fuzzy Systems
		
			12
			1
			
			2004
		
	
	Feng, G., Stability analysis of discrete-time fuzzy dynamic systems based on piecewise Lyapunov functions. IEEE Transactions on Fuzzy Systems, 12(1), pp.22-28, 2004.



	
		Stability of a Fuzzy Logic Based Piecewise Linear Hybrid System
		
			AaronWSeyfried
		
		
			2013
		
		
			Wright State University
		
	
	Thesis
	Seyfried, Aaron W. "Stability of a Fuzzy Logic Based Piecewise Linear Hybrid System", Thesis, Wright State University, 2013.



	
		A multiple Lyapunov function approach to stabilization of fuzzy control systems
		
			KTanaka
		
		
			THori
		
		
			HOWang
		
	
	
		IEEE Transactions on fuzzy systems
		
			11
			4
			
			2003
		
	
	Tanaka, K., Hori, T. and Wang, H.O., A multiple Lyapunov function approach to stabilization of fuzzy control systems. IEEE Transactions on fuzzy systems, 11(4), pp.582-589, 2003.



	
		A new fuzzy Lyapunov function approach for a Takagi-Sugeno fuzzy control system design. Fuzzy sets and systems
		
			BJRhee
		
		
			SWon
		
		
			2006
			157
			
		
	
	Rhee, B.J. and Won, S., A new fuzzy Lyapunov function approach for a Takagi-Sugeno fuzzy control system design. Fuzzy sets and systems, 157(9), pp.1211-1228, 2006.



	
		
		
			SoftwareZ3
		
		
			Package
		
		
			2014
			Redmond, WA
		
	
	Ver. 4.3.2, Microsoft
	Z3, Software Package, Ver. 4.3.2, Microsoft, Redmond, WA, 2014.



	
		Fuzzy Sets
		
			LAZadeh
		
	
	
		Information and Control
		
			8
			
			1965
		
	
	9 Zadeh, L. A., "Fuzzy Sets." Information and Control 8, 1965, pp. 338-353.



	
		Piecewise Affine Hybrid Automata Representation of a Multistage Fuzzy PID Controller
		
			MAClark
		
		
			KSRattan
		
		
	
	
		11th International Satisfiability Modulo Theories Competition SMT-COMP 2016
		2014 AAAI Spring Symposium Series
		Palo Alto, CA
		
			2014
		
	
	Scoring results
	Clark, M.A. and Rattan, K.S., "Piecewise Affine Hybrid Automata Representation of a Multistage Fuzzy PID Controller", 2014 AAAI Spring Symposium Series, Palo Alto, CA, 2014. 11 "Scoring results", 11th International Satisfiability Modulo Theories Competition SMT-COMP 2016. [url: http://smtcomp.sourceforge.net/2016/SMT-COMP-2016.pdf].


				
			
		
	
